/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * 
 * @export
 * @interface TLPCodeSnippetTagifyCode
 */
export interface TLPCodeSnippetTagifyCode {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TLPCodeSnippetTagifyCode
     */
    schema?: EmbeddedModelSchema;
    /**
     * stringified array of numbers
     * @type {string}
     * @memberof TLPCodeSnippetTagifyCode
     */
    distribution: string;
    /**
     * stringified array of numbers
     * @type {string}
     * @memberof TLPCodeSnippetTagifyCode
     */
    inferredDistribution: string;
    /**
     * stringified array of strings
     * @type {string}
     * @memberof TLPCodeSnippetTagifyCode
     */
    tags: string;
    /**
     * stringified array of strings
     * @type {string}
     * @memberof TLPCodeSnippetTagifyCode
     */
    inferredTags: string;
    /**
     * this is the model version
     * 
     * @type {string}
     * @memberof TLPCodeSnippetTagifyCode
     */
    model: string;
    /**
     * This is the version of the file that we are using that contains all the possible tags
     * @type {string}
     * @memberof TLPCodeSnippetTagifyCode
     */
    labelVersion: string;
    /**
     * this is the minimum score from the model that a tag needs to have to be included in the tags array.
     * @type {number}
     * @memberof TLPCodeSnippetTagifyCode
     */
    threshold: number;
    /**
     * this is the minimum score from the postprocessing that a tag needs to have to be included in the inferred_tags array.
     * @type {number}
     * @memberof TLPCodeSnippetTagifyCode
     */
    inferredThreshold: number;
    /**
     * this is the origin in which this asset was created, application(string representation)
     * @type {string}
     * @memberof TLPCodeSnippetTagifyCode
     */
    context: string;
    /**
     * This is the asset id.
     * @type {string}
     * @memberof TLPCodeSnippetTagifyCode
     */
    asset: string;
    /**
     * 
     * @type {string}
     * @memberof TLPCodeSnippetTagifyCode
     */
    os: string;
}

/**
 * Check if a given object implements the TLPCodeSnippetTagifyCode interface.
 */
export function instanceOfTLPCodeSnippetTagifyCode(value: object): value is TLPCodeSnippetTagifyCode {
    if (!('distribution' in value) || value['distribution'] === undefined) return false;
    if (!('inferredDistribution' in value) || value['inferredDistribution'] === undefined) return false;
    if (!('tags' in value) || value['tags'] === undefined) return false;
    if (!('inferredTags' in value) || value['inferredTags'] === undefined) return false;
    if (!('model' in value) || value['model'] === undefined) return false;
    if (!('labelVersion' in value) || value['labelVersion'] === undefined) return false;
    if (!('threshold' in value) || value['threshold'] === undefined) return false;
    if (!('inferredThreshold' in value) || value['inferredThreshold'] === undefined) return false;
    if (!('context' in value) || value['context'] === undefined) return false;
    if (!('asset' in value) || value['asset'] === undefined) return false;
    if (!('os' in value) || value['os'] === undefined) return false;
    return true;
}

export function TLPCodeSnippetTagifyCodeFromJSON(json: any): TLPCodeSnippetTagifyCode {
    return TLPCodeSnippetTagifyCodeFromJSONTyped(json, false);
}

export function TLPCodeSnippetTagifyCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLPCodeSnippetTagifyCode {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'distribution': json['distribution'],
        'inferredDistribution': json['inferred_distribution'],
        'tags': json['tags'],
        'inferredTags': json['inferred_tags'],
        'model': json['model'],
        'labelVersion': json['label_version'],
        'threshold': json['threshold'],
        'inferredThreshold': json['inferred_threshold'],
        'context': json['context'],
        'asset': json['asset'],
        'os': json['os'],
    };
}

export function TLPCodeSnippetTagifyCodeToJSON(json: any): TLPCodeSnippetTagifyCode {
    return TLPCodeSnippetTagifyCodeToJSONTyped(json, false);
}

export function TLPCodeSnippetTagifyCodeToJSONTyped(value?: TLPCodeSnippetTagifyCode | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'distribution': value['distribution'],
        'inferred_distribution': value['inferredDistribution'],
        'tags': value['tags'],
        'inferred_tags': value['inferredTags'],
        'model': value['model'],
        'label_version': value['labelVersion'],
        'threshold': value['threshold'],
        'inferred_threshold': value['inferredThreshold'],
        'context': value['context'],
        'asset': value['asset'],
        'os': value['os'],
    };
}

