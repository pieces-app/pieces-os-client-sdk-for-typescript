/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { Backup } from './Backup';
import {
    BackupFromJSON,
    BackupFromJSONTyped,
    BackupToJSON,
    BackupToJSONTyped,
} from './Backup';
import type { BackupStatusEnum } from './BackupStatusEnum';
import {
    BackupStatusEnumFromJSON,
    BackupStatusEnumFromJSONTyped,
    BackupStatusEnumToJSON,
    BackupStatusEnumToJSONTyped,
} from './BackupStatusEnum';

/**
 * TODO add more description to this.
 * 
 * can eventually add a number that display the percent downloaded an so on.(this is called percent 0-100)
 * @export
 * @interface BackupStatus
 */
export interface BackupStatus {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof BackupStatus
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {BackupStatusEnum}
     * @memberof BackupStatus
     */
    value?: BackupStatusEnum;
    /**
     * Optionally if the download is in progress you will receive a download percent(from 0-100).
     * @type {number}
     * @memberof BackupStatus
     */
    percentage?: number;
    /**
     * 
     * @type {Backup}
     * @memberof BackupStatus
     */
    backup: Backup;
}


/**
 * Check if a given object implements the BackupStatus interface.
 */
export function instanceOfBackupStatus(value: object): value is BackupStatus {
    if (!('backup' in value) || value['backup'] === undefined) return false;
    return true;
}

export function BackupStatusFromJSON(json: any): BackupStatus {
    return BackupStatusFromJSONTyped(json, false);
}

export function BackupStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackupStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'value': BackupStatusEnumFromJSON(json['value']),
        'percentage': json['percentage'] == null ? undefined : json['percentage'],
        'backup': BackupFromJSON(json['backup']),
    };
}

export function BackupStatusToJSON(json: any): BackupStatus {
    return BackupStatusToJSONTyped(json, false);
}

export function BackupStatusToJSONTyped(value?: BackupStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'value': BackupStatusEnumToJSON(value['value']),
        'percentage': value['percentage'],
        'backup': BackupToJSON(value['backup']),
    };
}

