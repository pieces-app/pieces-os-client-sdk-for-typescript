/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * These are all the possible uses for a model, i.e. code classification, OCR, text vs code,  tagify code, tag-based code search, neural code search, tagify color and code description.
 * @export
 */
export const ModelUsageEnum = {
    Unknown: 'UNKNOWN',
    Ocr: 'OCR',
    CodeClassification: 'CODE_CLASSIFICATION',
    TextVsCode: 'TEXT_VS_CODE',
    TagifyCode: 'TAGIFY_CODE',
    TlpTagSearch: 'TLP_TAG_SEARCH',
    TlpNeuralCodeSearch: 'TLP_NEURAL_CODE_SEARCH',
    TagifyColorFromCode: 'TAGIFY_COLOR_FROM_CODE',
    CodeDescription: 'CODE_DESCRIPTION',
    CodeTitle: 'CODE_TITLE',
    CodeSearchQueries: 'CODE_SEARCH_QUERIES',
    CodeExtractiveTags: 'CODE_EXTRACTIVE_TAGS',
    CodeExtractiveLinks: 'CODE_EXTRACTIVE_LINKS',
    CodeConversation: 'CODE_CONVERSATION',
    CodeGeneration: 'CODE_GENERATION',
    CodeSearch: 'CODE_SEARCH',
    CodeDiscovery: 'CODE_DISCOVERY',
    CodeRelatedPeople: 'CODE_RELATED_PEOPLE',
    CodeFramework: 'CODE_FRAMEWORK',
    VideoOcr: 'VIDEO_OCR',
    TextVsCodeSegmentation: 'TEXT_VS_CODE_SEGMENTATION',
    TextEmbedding: 'TEXT_EMBEDDING',
    TechnicalError: 'TECHNICAL_ERROR'
} as const;
export type ModelUsageEnum = typeof ModelUsageEnum[keyof typeof ModelUsageEnum];


export function instanceOfModelUsageEnum(value: any): boolean {
    for (const key in ModelUsageEnum) {
        if (Object.prototype.hasOwnProperty.call(ModelUsageEnum, key)) {
            if (ModelUsageEnum[key as keyof typeof ModelUsageEnum] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ModelUsageEnumFromJSON(json: any): ModelUsageEnum {
    return ModelUsageEnumFromJSONTyped(json, false);
}

export function ModelUsageEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelUsageEnum {
    if (json === null || json === undefined) {
        // Return x-enum-default
        return 'UNKNOWN' as ModelUsageEnum;
    }

    if (instanceOfModelUsageEnum(json)) {
        return json as ModelUsageEnum;
    }
    else {
        // Return x-enum-default
        return 'UNKNOWN' as ModelUsageEnum;
    }
}

export function ModelUsageEnumToJSON(value?: ModelUsageEnum | null): any {
    if (value === null || value === undefined) {
        // Return x-enum-default
        return 'UNKNOWN' as ModelUsageEnum;
    }

    // This must be checked when arguments are passed as 'any'
    if (instanceOfModelUsageEnum(value)) {
        return value as ModelUsageEnum;
    }
    else {
        // Return x-enum-default
        return 'UNKNOWN' as ModelUsageEnum;
    }
}

export function ModelUsageEnumToJSONTyped(value: any, ignoreDiscriminator: boolean): ModelUsageEnum {
    if (value === null || value === undefined) {
        // Return x-enum-default
        return 'UNKNOWN' as ModelUsageEnum;
    }
    if (instanceOfModelUsageEnum(value)) {
        return value as ModelUsageEnum;
    }
    else {
        // Return x-enum-default
        return 'UNKNOWN' as ModelUsageEnum;
    }
}
