/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { Auth0UserBetaStatus } from './Auth0UserBetaStatus';
import {
    Auth0UserBetaStatusFromJSON,
    Auth0UserBetaStatusFromJSONTyped,
    Auth0UserBetaStatusToJSON,
    Auth0UserBetaStatusToJSONTyped,
} from './Auth0UserBetaStatus';

/**
 * This is used to either grant or remove a specific provider betastatus
 * @export
 * @interface UserBetaStatus
 */
export interface UserBetaStatus {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof UserBetaStatus
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Auth0UserBetaStatus}
     * @memberof UserBetaStatus
     */
    auth0?: Auth0UserBetaStatus;
    /**
     * 
     * @type {Auth0UserBetaStatus}
     * @memberof UserBetaStatus
     */
    descope?: Auth0UserBetaStatus;
    /**
     * 
     * @type {string}
     * @memberof UserBetaStatus
     */
    user: string;
}


/**
 * Check if a given object implements the UserBetaStatus interface.
 */
export function instanceOfUserBetaStatus(value: object): value is UserBetaStatus {
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function UserBetaStatusFromJSON(json: any): UserBetaStatus {
    return UserBetaStatusFromJSONTyped(json, false);
}

export function UserBetaStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserBetaStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'auth0': json['auth0'] == null ? undefined : Auth0UserBetaStatusFromJSON(json['auth0']),
        'descope': json['descope'] == null ? undefined : Auth0UserBetaStatusFromJSON(json['descope']),
        'user': json['user'],
    };
}

export function UserBetaStatusToJSON(json: any): UserBetaStatus {
    return UserBetaStatusToJSONTyped(json, false);
}

export function UserBetaStatusToJSONTyped(value?: UserBetaStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'auth0': Auth0UserBetaStatusToJSON(value['auth0']),
        'descope': Auth0UserBetaStatusToJSON(value['descope']),
        'user': value['user'],
    };
}

