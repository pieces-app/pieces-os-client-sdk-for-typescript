/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { TrackedConversationMessageEventIdentifierDescriptionPairs } from './TrackedConversationMessageEventIdentifierDescriptionPairs';
import {
    TrackedConversationMessageEventIdentifierDescriptionPairsFromJSON,
    TrackedConversationMessageEventIdentifierDescriptionPairsFromJSONTyped,
    TrackedConversationMessageEventIdentifierDescriptionPairsToJSON,
    TrackedConversationMessageEventIdentifierDescriptionPairsToJSONTyped,
} from './TrackedConversationMessageEventIdentifierDescriptionPairs';
import type { TrackedConversationMessageEventMetadata } from './TrackedConversationMessageEventMetadata';
import {
    TrackedConversationMessageEventMetadataFromJSON,
    TrackedConversationMessageEventMetadataFromJSONTyped,
    TrackedConversationMessageEventMetadataToJSON,
    TrackedConversationMessageEventMetadataToJSONTyped,
} from './TrackedConversationMessageEventMetadata';
import type { ReferencedConversationMessage } from './ReferencedConversationMessage';
import {
    ReferencedConversationMessageFromJSON,
    ReferencedConversationMessageFromJSONTyped,
    ReferencedConversationMessageToJSON,
    ReferencedConversationMessageToJSONTyped,
} from './ReferencedConversationMessage';

/**
 * This is a pre-created(seed) TrackedConversationMessageEvent
 * @export
 * @interface SeededTrackedConversationMessageEvent
 */
export interface SeededTrackedConversationMessageEvent {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededTrackedConversationMessageEvent
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {TrackedConversationMessageEventIdentifierDescriptionPairs}
     * @memberof SeededTrackedConversationMessageEvent
     */
    identifierDescriptionPair: TrackedConversationMessageEventIdentifierDescriptionPairs;
    /**
     * 
     * @type {ReferencedConversationMessage}
     * @memberof SeededTrackedConversationMessageEvent
     */
    message: ReferencedConversationMessage;
    /**
     * 
     * @type {TrackedConversationMessageEventMetadata}
     * @memberof SeededTrackedConversationMessageEvent
     */
    metadata?: TrackedConversationMessageEventMetadata;
}

/**
 * Check if a given object implements the SeededTrackedConversationMessageEvent interface.
 */
export function instanceOfSeededTrackedConversationMessageEvent(value: object): value is SeededTrackedConversationMessageEvent {
    if (!('identifierDescriptionPair' in value) || value['identifierDescriptionPair'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function SeededTrackedConversationMessageEventFromJSON(json: any): SeededTrackedConversationMessageEvent {
    return SeededTrackedConversationMessageEventFromJSONTyped(json, false);
}

export function SeededTrackedConversationMessageEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededTrackedConversationMessageEvent {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'identifierDescriptionPair': TrackedConversationMessageEventIdentifierDescriptionPairsFromJSON(json['identifier_description_pair']),
        'message': ReferencedConversationMessageFromJSON(json['message']),
        'metadata': json['metadata'] == null ? undefined : TrackedConversationMessageEventMetadataFromJSON(json['metadata']),
    };
}

export function SeededTrackedConversationMessageEventToJSON(json: any): SeededTrackedConversationMessageEvent {
    return SeededTrackedConversationMessageEventToJSONTyped(json, false);
}

export function SeededTrackedConversationMessageEventToJSONTyped(value?: SeededTrackedConversationMessageEvent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'identifier_description_pair': TrackedConversationMessageEventIdentifierDescriptionPairsToJSON(value['identifierDescriptionPair']),
        'message': ReferencedConversationMessageToJSON(value['message']),
        'metadata': TrackedConversationMessageEventMetadataToJSON(value['metadata']),
    };
}

