/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This is a model that will let the products know some of our recommendations around Ollama:
 * 
 * for now: will just add a recommendation if the user should even use Ollama or NOT. -- (inference)
 * 
 * inference: IE if we want to recommendation the user to use inference (ie call the model) or not
 * @export
 * @interface OllamaRecommendation
 */
export interface OllamaRecommendation {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof OllamaRecommendation
     */
    schema?: EmbeddedModelSchema;
    /**
     * This is a bool that will let the client know if we recommend to use ollama for inference or not
     * @type {boolean}
     * @memberof OllamaRecommendation
     */
    inference?: boolean;
}


/**
 * Check if a given object implements the OllamaRecommendation interface.
 */
export function instanceOfOllamaRecommendation(value: object): value is OllamaRecommendation {
    return true;
}

export function OllamaRecommendationFromJSON(json: any): OllamaRecommendation {
    return OllamaRecommendationFromJSONTyped(json, false);
}

export function OllamaRecommendationFromJSONTyped(json: any, ignoreDiscriminator: boolean): OllamaRecommendation {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'inference': json['inference'] == null ? undefined : json['inference'],
    };
}

export function OllamaRecommendationToJSON(json: any): OllamaRecommendation {
    return OllamaRecommendationToJSONTyped(json, false);
}

export function OllamaRecommendationToJSONTyped(value?: OllamaRecommendation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'inference': value['inference'],
    };
}

