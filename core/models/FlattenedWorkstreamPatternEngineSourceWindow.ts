/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FlattenedTags } from './FlattenedTags';
import {
    FlattenedTagsFromJSON,
    FlattenedTagsFromJSONTyped,
    FlattenedTagsToJSON,
    FlattenedTagsToJSONTyped,
} from './FlattenedTags';
import type { FlattenedWebsites } from './FlattenedWebsites';
import {
    FlattenedWebsitesFromJSON,
    FlattenedWebsitesFromJSONTyped,
    FlattenedWebsitesToJSON,
    FlattenedWebsitesToJSONTyped,
} from './FlattenedWebsites';
import type { Score } from './Score';
import {
    ScoreFromJSON,
    ScoreFromJSONTyped,
    ScoreToJSON,
    ScoreToJSONTyped,
} from './Score';
import type { FlattenedWorkstreamEvents } from './FlattenedWorkstreamEvents';
import {
    FlattenedWorkstreamEventsFromJSON,
    FlattenedWorkstreamEventsFromJSONTyped,
    FlattenedWorkstreamEventsToJSON,
    FlattenedWorkstreamEventsToJSONTyped,
} from './FlattenedWorkstreamEvents';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { GroupedTimestamp } from './GroupedTimestamp';
import {
    GroupedTimestampFromJSON,
    GroupedTimestampFromJSONTyped,
    GroupedTimestampToJSON,
    GroupedTimestampToJSONTyped,
} from './GroupedTimestamp';

/**
 * This is the flattened source window for the workstream pattern engine
 * @export
 * @interface FlattenedWorkstreamPatternEngineSourceWindow
 */
export interface FlattenedWorkstreamPatternEngineSourceWindow {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof FlattenedWorkstreamPatternEngineSourceWindow
     */
    schema?: EmbeddedModelSchema;
    /**
     * The id of the flattened source window
     * @type {string}
     * @memberof FlattenedWorkstreamPatternEngineSourceWindow
     */
    id: string;
    /**
     * The name of the flattened source window
     * @type {string}
     * @memberof FlattenedWorkstreamPatternEngineSourceWindow
     */
    name: string;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof FlattenedWorkstreamPatternEngineSourceWindow
     */
    created: GroupedTimestamp;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof FlattenedWorkstreamPatternEngineSourceWindow
     */
    updated: GroupedTimestamp;
    /**
     * 
     * @type {Score}
     * @memberof FlattenedWorkstreamPatternEngineSourceWindow
     */
    score?: Score;
    /**
     * 
     * @type {FlattenedWorkstreamEvents}
     * @memberof FlattenedWorkstreamPatternEngineSourceWindow
     */
    workstreamEvents?: FlattenedWorkstreamEvents;
    /**
     * 
     * @type {FlattenedWebsites}
     * @memberof FlattenedWorkstreamPatternEngineSourceWindow
     */
    websites?: FlattenedWebsites;
    /**
     * 
     * @type {FlattenedTags}
     * @memberof FlattenedWorkstreamPatternEngineSourceWindow
     */
    tags?: FlattenedTags;
}


/**
 * Check if a given object implements the FlattenedWorkstreamPatternEngineSourceWindow interface.
 */
export function instanceOfFlattenedWorkstreamPatternEngineSourceWindow(value: object): value is FlattenedWorkstreamPatternEngineSourceWindow {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    return true;
}

export function FlattenedWorkstreamPatternEngineSourceWindowFromJSON(json: any): FlattenedWorkstreamPatternEngineSourceWindow {
    return FlattenedWorkstreamPatternEngineSourceWindowFromJSONTyped(json, false);
}

export function FlattenedWorkstreamPatternEngineSourceWindowFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlattenedWorkstreamPatternEngineSourceWindow {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'id': json['id'],
        'name': json['name'],
        'created': GroupedTimestampFromJSON(json['created']),
        'updated': GroupedTimestampFromJSON(json['updated']),
        'score': json['score'] == null ? undefined : ScoreFromJSON(json['score']),
        'workstreamEvents': json['workstream_events'] == null ? undefined : FlattenedWorkstreamEventsFromJSON(json['workstream_events']),
        'websites': json['websites'] == null ? undefined : FlattenedWebsitesFromJSON(json['websites']),
        'tags': json['tags'] == null ? undefined : FlattenedTagsFromJSON(json['tags']),
    };
}

export function FlattenedWorkstreamPatternEngineSourceWindowToJSON(json: any): FlattenedWorkstreamPatternEngineSourceWindow {
    return FlattenedWorkstreamPatternEngineSourceWindowToJSONTyped(json, false);
}

export function FlattenedWorkstreamPatternEngineSourceWindowToJSONTyped(value?: FlattenedWorkstreamPatternEngineSourceWindow | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'id': value['id'],
        'name': value['name'],
        'created': GroupedTimestampToJSON(value['created']),
        'updated': GroupedTimestampToJSON(value['updated']),
        'score': ScoreToJSON(value['score']),
        'workstream_events': FlattenedWorkstreamEventsToJSON(value['workstreamEvents']),
        'websites': FlattenedWebsitesToJSON(value['websites']),
        'tags': FlattenedTagsToJSON(value['tags']),
    };
}

