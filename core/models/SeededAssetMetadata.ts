/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SeededAnchor } from './SeededAnchor';
import {
    SeededAnchorFromJSON,
    SeededAnchorFromJSONTyped,
    SeededAnchorToJSON,
    SeededAnchorToJSONTyped,
} from './SeededAnchor';
import type { SeededAssetSensitive } from './SeededAssetSensitive';
import {
    SeededAssetSensitiveFromJSON,
    SeededAssetSensitiveFromJSONTyped,
    SeededAssetSensitiveToJSON,
    SeededAssetSensitiveToJSONTyped,
} from './SeededAssetSensitive';
import type { SeededPerson } from './SeededPerson';
import {
    SeededPersonFromJSON,
    SeededPersonFromJSONTyped,
    SeededPersonToJSON,
    SeededPersonToJSONTyped,
} from './SeededPerson';
import type { SeededHint } from './SeededHint';
import {
    SeededHintFromJSON,
    SeededHintFromJSONTyped,
    SeededHintToJSON,
    SeededHintToJSONTyped,
} from './SeededHint';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { SeededAnnotation } from './SeededAnnotation';
import {
    SeededAnnotationFromJSON,
    SeededAnnotationFromJSONTyped,
    SeededAnnotationToJSON,
    SeededAnnotationToJSONTyped,
} from './SeededAnnotation';
import type { MechanismEnum } from './MechanismEnum';
import {
    MechanismEnumFromJSON,
    MechanismEnumFromJSONTyped,
    MechanismEnumToJSON,
    MechanismEnumToJSONTyped,
} from './MechanismEnum';
import type { SeededAssetWebsite } from './SeededAssetWebsite';
import {
    SeededAssetWebsiteFromJSON,
    SeededAssetWebsiteFromJSONTyped,
    SeededAssetWebsiteToJSON,
    SeededAssetWebsiteToJSONTyped,
} from './SeededAssetWebsite';
import type { SeededAssetTag } from './SeededAssetTag';
import {
    SeededAssetTagFromJSON,
    SeededAssetTagFromJSONTyped,
    SeededAssetTagToJSON,
    SeededAssetTagToJSONTyped,
} from './SeededAssetTag';

/**
 * This is optional metadata sent with the SeededAsset and other SeededAssets ie (UE, Jetbrains...)
 * 
 * Note: if a user/develop didnt explicitly state a mechanism we will default to manual(user Driven only)
 * @export
 * @interface SeededAssetMetadata
 */
export interface SeededAssetMetadata {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededAssetMetadata
     */
    schema?: EmbeddedModelSchema;
    /**
     * This is the name of the asset.
     * @type {string}
     * @memberof SeededAssetMetadata
     */
    name?: string;
    /**
     * 
     * @type {MechanismEnum}
     * @memberof SeededAssetMetadata
     */
    mechanism?: MechanismEnum;
    /**
     * (optional) can add some tags to associate to this asset.
     * @type {Array<SeededAssetTag>}
     * @memberof SeededAssetMetadata
     */
    tags?: Array<SeededAssetTag>;
    /**
     * 
     * @type {Array<SeededAssetWebsite>}
     * @memberof SeededAssetMetadata
     */
    websites?: Array<SeededAssetWebsite>;
    /**
     * 
     * @type {Array<SeededAssetSensitive>}
     * @memberof SeededAssetMetadata
     */
    sensitives?: Array<SeededAssetSensitive>;
    /**
     * 
     * @type {Array<SeededPerson>}
     * @memberof SeededAssetMetadata
     */
    persons?: Array<SeededPerson>;
    /**
     * 
     * @type {Array<SeededAnnotation>}
     * @memberof SeededAssetMetadata
     */
    annotations?: Array<SeededAnnotation>;
    /**
     * 
     * @type {Array<SeededHint>}
     * @memberof SeededAssetMetadata
     */
    hints?: Array<SeededHint>;
    /**
     * 
     * @type {Array<SeededAnchor>}
     * @memberof SeededAssetMetadata
     */
    anchors?: Array<SeededAnchor>;
}



/**
 * Check if a given object implements the SeededAssetMetadata interface.
 */
export function instanceOfSeededAssetMetadata(value: object): value is SeededAssetMetadata {
    return true;
}

export function SeededAssetMetadataFromJSON(json: any): SeededAssetMetadata {
    return SeededAssetMetadataFromJSONTyped(json, false);
}

export function SeededAssetMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededAssetMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'name': json['name'] == null ? undefined : json['name'],
        'mechanism': json['mechanism'] == null ? undefined : MechanismEnumFromJSON(json['mechanism']),
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(SeededAssetTagFromJSON)),
        'websites': json['websites'] == null ? undefined : ((json['websites'] as Array<any>).map(SeededAssetWebsiteFromJSON)),
        'sensitives': json['sensitives'] == null ? undefined : ((json['sensitives'] as Array<any>).map(SeededAssetSensitiveFromJSON)),
        'persons': json['persons'] == null ? undefined : ((json['persons'] as Array<any>).map(SeededPersonFromJSON)),
        'annotations': json['annotations'] == null ? undefined : ((json['annotations'] as Array<any>).map(SeededAnnotationFromJSON)),
        'hints': json['hints'] == null ? undefined : ((json['hints'] as Array<any>).map(SeededHintFromJSON)),
        'anchors': json['anchors'] == null ? undefined : ((json['anchors'] as Array<any>).map(SeededAnchorFromJSON)),
    };
}

export function SeededAssetMetadataToJSON(json: any): SeededAssetMetadata {
    return SeededAssetMetadataToJSONTyped(json, false);
}

export function SeededAssetMetadataToJSONTyped(value?: SeededAssetMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'name': value['name'],
        'mechanism': MechanismEnumToJSON(value['mechanism']),
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(SeededAssetTagToJSON)),
        'websites': value['websites'] == null ? undefined : ((value['websites'] as Array<any>).map(SeededAssetWebsiteToJSON)),
        'sensitives': value['sensitives'] == null ? undefined : ((value['sensitives'] as Array<any>).map(SeededAssetSensitiveToJSON)),
        'persons': value['persons'] == null ? undefined : ((value['persons'] as Array<any>).map(SeededPersonToJSON)),
        'annotations': value['annotations'] == null ? undefined : ((value['annotations'] as Array<any>).map(SeededAnnotationToJSON)),
        'hints': value['hints'] == null ? undefined : ((value['hints'] as Array<any>).map(SeededHintToJSON)),
        'anchors': value['anchors'] == null ? undefined : ((value['anchors'] as Array<any>).map(SeededAnchorToJSON)),
    };
}

