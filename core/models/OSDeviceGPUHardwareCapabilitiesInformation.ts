/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This will give specific information on task specific capibilites for GPU.
 * @export
 * @interface OSDeviceGPUHardwareCapabilitiesInformation
 */
export interface OSDeviceGPUHardwareCapabilitiesInformation {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof OSDeviceGPUHardwareCapabilitiesInformation
     */
    schema?: EmbeddedModelSchema;
    /**
     * This will let us know if in the case we have a gpu and our gpu has the capabilities to use llms
     * @type {boolean}
     * @memberof OSDeviceGPUHardwareCapabilitiesInformation
     */
    llm?: boolean;
}


/**
 * Check if a given object implements the OSDeviceGPUHardwareCapabilitiesInformation interface.
 */
export function instanceOfOSDeviceGPUHardwareCapabilitiesInformation(value: object): value is OSDeviceGPUHardwareCapabilitiesInformation {
    return true;
}

export function OSDeviceGPUHardwareCapabilitiesInformationFromJSON(json: any): OSDeviceGPUHardwareCapabilitiesInformation {
    return OSDeviceGPUHardwareCapabilitiesInformationFromJSONTyped(json, false);
}

export function OSDeviceGPUHardwareCapabilitiesInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): OSDeviceGPUHardwareCapabilitiesInformation {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'llm': json['llm'] == null ? undefined : json['llm'],
    };
}

export function OSDeviceGPUHardwareCapabilitiesInformationToJSON(json: any): OSDeviceGPUHardwareCapabilitiesInformation {
    return OSDeviceGPUHardwareCapabilitiesInformationToJSONTyped(json, false);
}

export function OSDeviceGPUHardwareCapabilitiesInformationToJSONTyped(value?: OSDeviceGPUHardwareCapabilitiesInformation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'llm': value['llm'],
    };
}

