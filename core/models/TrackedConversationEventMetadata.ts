/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { TrackedConversationEventRenameMetadata } from './TrackedConversationEventRenameMetadata';
import {
    TrackedConversationEventRenameMetadataFromJSON,
    TrackedConversationEventRenameMetadataFromJSONTyped,
    TrackedConversationEventRenameMetadataToJSON,
    TrackedConversationEventRenameMetadataToJSONTyped,
} from './TrackedConversationEventRenameMetadata';

/**
 * This is the metadata for the the ConversationEvent
 * @export
 * @interface TrackedConversationEventMetadata
 */
export interface TrackedConversationEventMetadata {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TrackedConversationEventMetadata
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {TrackedConversationEventRenameMetadata}
     * @memberof TrackedConversationEventMetadata
     */
    rename?: TrackedConversationEventRenameMetadata;
}

/**
 * Check if a given object implements the TrackedConversationEventMetadata interface.
 */
export function instanceOfTrackedConversationEventMetadata(value: object): value is TrackedConversationEventMetadata {
    return true;
}

export function TrackedConversationEventMetadataFromJSON(json: any): TrackedConversationEventMetadata {
    return TrackedConversationEventMetadataFromJSONTyped(json, false);
}

export function TrackedConversationEventMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedConversationEventMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'rename': json['rename'] == null ? undefined : TrackedConversationEventRenameMetadataFromJSON(json['rename']),
    };
}

export function TrackedConversationEventMetadataToJSON(json: any): TrackedConversationEventMetadata {
    return TrackedConversationEventMetadataToJSONTyped(json, false);
}

export function TrackedConversationEventMetadataToJSONTyped(value?: TrackedConversationEventMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'rename': TrackedConversationEventRenameMetadataToJSON(value['rename']),
    };
}

