/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TrackedConversationMessageSentimentMetadata } from './TrackedConversationMessageSentimentMetadata';
import {
    TrackedConversationMessageSentimentMetadataFromJSON,
    TrackedConversationMessageSentimentMetadataFromJSONTyped,
    TrackedConversationMessageSentimentMetadataToJSON,
    TrackedConversationMessageSentimentMetadataToJSONTyped,
} from './TrackedConversationMessageSentimentMetadata';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This is the metadata for the the ConversationMessageEvent
 * @export
 * @interface TrackedConversationMessageEventMetadata
 */
export interface TrackedConversationMessageEventMetadata {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TrackedConversationMessageEventMetadata
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {TrackedConversationMessageSentimentMetadata}
     * @memberof TrackedConversationMessageEventMetadata
     */
    sentiment?: TrackedConversationMessageSentimentMetadata;
}


/**
 * Check if a given object implements the TrackedConversationMessageEventMetadata interface.
 */
export function instanceOfTrackedConversationMessageEventMetadata(value: object): value is TrackedConversationMessageEventMetadata {
    return true;
}

export function TrackedConversationMessageEventMetadataFromJSON(json: any): TrackedConversationMessageEventMetadata {
    return TrackedConversationMessageEventMetadataFromJSONTyped(json, false);
}

export function TrackedConversationMessageEventMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedConversationMessageEventMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'sentiment': json['sentiment'] == null ? undefined : TrackedConversationMessageSentimentMetadataFromJSON(json['sentiment']),
    };
}

export function TrackedConversationMessageEventMetadataToJSON(json: any): TrackedConversationMessageEventMetadata {
    return TrackedConversationMessageEventMetadataToJSONTyped(json, false);
}

export function TrackedConversationMessageEventMetadataToJSONTyped(value?: TrackedConversationMessageEventMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'sentiment': TrackedConversationMessageSentimentMetadataToJSON(value['sentiment']),
    };
}

