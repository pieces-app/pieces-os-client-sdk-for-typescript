/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * note: this is modeled off of the browsers bounding box DOMRect
 * https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect
 * @export
 * @interface WindowDimensions
 */
export interface WindowDimensions {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof WindowDimensions
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {number}
     * @memberof WindowDimensions
     */
    bottom: number;
    /**
     * 
     * @type {number}
     * @memberof WindowDimensions
     */
    height: number;
    /**
     * 
     * @type {number}
     * @memberof WindowDimensions
     */
    left: number;
    /**
     * 
     * @type {number}
     * @memberof WindowDimensions
     */
    right: number;
    /**
     * 
     * @type {number}
     * @memberof WindowDimensions
     */
    top: number;
    /**
     * 
     * @type {number}
     * @memberof WindowDimensions
     */
    width: number;
    /**
     * 
     * @type {number}
     * @memberof WindowDimensions
     */
    x: number;
    /**
     * 
     * @type {number}
     * @memberof WindowDimensions
     */
    y: number;
}


/**
 * Check if a given object implements the WindowDimensions interface.
 */
export function instanceOfWindowDimensions(value: object): value is WindowDimensions {
    if (!('bottom' in value) || value['bottom'] === undefined) return false;
    if (!('height' in value) || value['height'] === undefined) return false;
    if (!('left' in value) || value['left'] === undefined) return false;
    if (!('right' in value) || value['right'] === undefined) return false;
    if (!('top' in value) || value['top'] === undefined) return false;
    if (!('width' in value) || value['width'] === undefined) return false;
    if (!('x' in value) || value['x'] === undefined) return false;
    if (!('y' in value) || value['y'] === undefined) return false;
    return true;
}

export function WindowDimensionsFromJSON(json: any): WindowDimensions {
    return WindowDimensionsFromJSONTyped(json, false);
}

export function WindowDimensionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): WindowDimensions {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'bottom': json['bottom'],
        'height': json['height'],
        'left': json['left'],
        'right': json['right'],
        'top': json['top'],
        'width': json['width'],
        'x': json['x'],
        'y': json['y'],
    };
}

export function WindowDimensionsToJSON(json: any): WindowDimensions {
    return WindowDimensionsToJSONTyped(json, false);
}

export function WindowDimensionsToJSONTyped(value?: WindowDimensions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'bottom': value['bottom'],
        'height': value['height'],
        'left': value['left'],
        'right': value['right'],
        'top': value['top'],
        'width': value['width'],
        'x': value['x'],
        'y': value['y'],
    };
}

