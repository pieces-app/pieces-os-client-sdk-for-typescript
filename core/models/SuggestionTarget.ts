/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SeededConnectorCreation } from './SeededConnectorCreation';
import {
    SeededConnectorCreationFromJSON,
    SeededConnectorCreationFromJSONTyped,
    SeededConnectorCreationToJSON,
    SeededConnectorCreationToJSONTyped,
} from './SeededConnectorCreation';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This is the target that was sent to pieces. This will return the string that represents this coppied || pasted asset. This will also send along the SeededConnectorCreation and will send along the vector that we created based on the seed.
 * @export
 * @interface SuggestionTarget
 */
export interface SuggestionTarget {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SuggestionTarget
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {SeededConnectorCreation}
     * @memberof SuggestionTarget
     */
    seed: SeededConnectorCreation;
    /**
     * This is the vector representation of this target that we generated.
     * @type {number}
     * @memberof SuggestionTarget
     */
    vector: number;
}


/**
 * Check if a given object implements the SuggestionTarget interface.
 */
export function instanceOfSuggestionTarget(value: object): value is SuggestionTarget {
    if (!('seed' in value) || value['seed'] === undefined) return false;
    if (!('vector' in value) || value['vector'] === undefined) return false;
    return true;
}

export function SuggestionTargetFromJSON(json: any): SuggestionTarget {
    return SuggestionTargetFromJSONTyped(json, false);
}

export function SuggestionTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuggestionTarget {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'seed': SeededConnectorCreationFromJSON(json['seed']),
        'vector': json['vector'],
    };
}

export function SuggestionTargetToJSON(json: any): SuggestionTarget {
    return SuggestionTargetToJSONTyped(json, false);
}

export function SuggestionTargetToJSONTyped(value?: SuggestionTarget | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'seed': SeededConnectorCreationToJSON(value['seed']),
        'vector': value['vector'],
    };
}

