/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { FoundryRecommendation } from './FoundryRecommendation';
import {
    FoundryRecommendationFromJSON,
    FoundryRecommendationFromJSONTyped,
    FoundryRecommendationToJSON,
    FoundryRecommendationToJSONTyped,
} from './FoundryRecommendation';
import type { FoundryDeployment } from './FoundryDeployment';
import {
    FoundryDeploymentFromJSON,
    FoundryDeploymentFromJSONTyped,
    FoundryDeploymentToJSON,
    FoundryDeploymentToJSONTyped,
} from './FoundryDeployment';

/**
 * This will get used in the Websocket and in the get request for Foundry
 * Note:
 *  - updating (nullable) will be used in the case an update is underway
 *  - installing (nullable) will be used in the case an installation is underway
 *  - updateRequired (nullable) will be used in the case an update is required
 *  - installation (nullable) will be provided in the case Foundry is installed.
 * @export
 * @interface FoundryStatus
 */
export interface FoundryStatus {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof FoundryStatus
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {FoundryDeployment}
     * @memberof FoundryStatus
     */
    updating?: FoundryDeployment;
    /**
     * 
     * @type {FoundryDeployment}
     * @memberof FoundryStatus
     */
    installing?: FoundryDeployment;
    /**
     * 
     * @type {FoundryDeployment}
     * @memberof FoundryStatus
     */
    updateRequired?: FoundryDeployment;
    /**
     * 
     * @type {FoundryDeployment}
     * @memberof FoundryStatus
     */
    installation?: FoundryDeployment;
    /**
     * 
     * @type {FoundryRecommendation}
     * @memberof FoundryStatus
     */
    recommendation?: FoundryRecommendation;
}

/**
 * Check if a given object implements the FoundryStatus interface.
 */
export function instanceOfFoundryStatus(value: object): value is FoundryStatus {
    return true;
}

export function FoundryStatusFromJSON(json: any): FoundryStatus {
    return FoundryStatusFromJSONTyped(json, false);
}

export function FoundryStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): FoundryStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'updating': json['updating'] == null ? undefined : FoundryDeploymentFromJSON(json['updating']),
        'installing': json['installing'] == null ? undefined : FoundryDeploymentFromJSON(json['installing']),
        'updateRequired': json['updateRequired'] == null ? undefined : FoundryDeploymentFromJSON(json['updateRequired']),
        'installation': json['installation'] == null ? undefined : FoundryDeploymentFromJSON(json['installation']),
        'recommendation': json['recommendation'] == null ? undefined : FoundryRecommendationFromJSON(json['recommendation']),
    };
}

export function FoundryStatusToJSON(json: any): FoundryStatus {
    return FoundryStatusToJSONTyped(json, false);
}

export function FoundryStatusToJSONTyped(value?: FoundryStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'updating': FoundryDeploymentToJSON(value['updating']),
        'installing': FoundryDeploymentToJSON(value['installing']),
        'updateRequired': FoundryDeploymentToJSON(value['updateRequired']),
        'installation': FoundryDeploymentToJSON(value['installation']),
        'recommendation': FoundryRecommendationToJSON(value['recommendation']),
    };
}

