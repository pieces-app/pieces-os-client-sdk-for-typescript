/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { Persons } from './Persons';
import {
    PersonsFromJSON,
    PersonsFromJSONTyped,
    PersonsToJSON,
    PersonsToJSONTyped,
} from './Persons';

/**
 * This model is used for the output of the /qgpt/related/persons endpoint.
 * 
 * Explanations here is a custom object with key value pairs,
 * when the key is the personUUId and the value is an explanation as to why this person was reccommended.
 * @export
 * @interface QGPTPersonsRelatedOutput
 */
export interface QGPTPersonsRelatedOutput {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof QGPTPersonsRelatedOutput
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Persons}
     * @memberof QGPTPersonsRelatedOutput
     */
    persons: Persons;
    /**
     * This is a Map<String, String> where the the key is a person id. and the value is the explanation.
     * @type {{ [key: string]: string; }}
     * @memberof QGPTPersonsRelatedOutput
     */
    explanations?: { [key: string]: string; };
}

/**
 * Check if a given object implements the QGPTPersonsRelatedOutput interface.
 */
export function instanceOfQGPTPersonsRelatedOutput(value: object): value is QGPTPersonsRelatedOutput {
    if (!('persons' in value) || value['persons'] === undefined) return false;
    return true;
}

export function QGPTPersonsRelatedOutputFromJSON(json: any): QGPTPersonsRelatedOutput {
    return QGPTPersonsRelatedOutputFromJSONTyped(json, false);
}

export function QGPTPersonsRelatedOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): QGPTPersonsRelatedOutput {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'persons': PersonsFromJSON(json['persons']),
        'explanations': json['explanations'] == null ? undefined : json['explanations'],
    };
}

export function QGPTPersonsRelatedOutputToJSON(json: any): QGPTPersonsRelatedOutput {
    return QGPTPersonsRelatedOutputToJSONTyped(json, false);
}

export function QGPTPersonsRelatedOutputToJSONTyped(value?: QGPTPersonsRelatedOutput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'persons': PersonsToJSON(value['persons']),
        'explanations': value['explanations'],
    };
}

