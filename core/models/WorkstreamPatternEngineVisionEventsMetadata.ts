/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { WorkstreamPatternEngineVisionEvent } from './WorkstreamPatternEngineVisionEvent';
import {
    WorkstreamPatternEngineVisionEventFromJSON,
    WorkstreamPatternEngineVisionEventFromJSONTyped,
    WorkstreamPatternEngineVisionEventToJSON,
    WorkstreamPatternEngineVisionEventToJSONTyped,
} from './WorkstreamPatternEngineVisionEvent';
import type { ByteDescriptor } from './ByteDescriptor';
import {
    ByteDescriptorFromJSON,
    ByteDescriptorFromJSONTyped,
    ByteDescriptorToJSON,
    ByteDescriptorToJSONTyped,
} from './ByteDescriptor';

/**
 * This is specific model that will return the size of the WPE in bytes
 * @export
 * @interface WorkstreamPatternEngineVisionEventsMetadata
 */
export interface WorkstreamPatternEngineVisionEventsMetadata {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof WorkstreamPatternEngineVisionEventsMetadata
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {ByteDescriptor}
     * @memberof WorkstreamPatternEngineVisionEventsMetadata
     */
    bytes: ByteDescriptor;
    /**
     * This is the total number of events.
     * @type {number}
     * @memberof WorkstreamPatternEngineVisionEventsMetadata
     */
    total: number;
    /**
     * 
     * @type {WorkstreamPatternEngineVisionEvent}
     * @memberof WorkstreamPatternEngineVisionEventsMetadata
     */
    oldest?: WorkstreamPatternEngineVisionEvent;
    /**
     * 
     * @type {WorkstreamPatternEngineVisionEvent}
     * @memberof WorkstreamPatternEngineVisionEventsMetadata
     */
    newest?: WorkstreamPatternEngineVisionEvent;
}

/**
 * Check if a given object implements the WorkstreamPatternEngineVisionEventsMetadata interface.
 */
export function instanceOfWorkstreamPatternEngineVisionEventsMetadata(value: object): value is WorkstreamPatternEngineVisionEventsMetadata {
    if (!('bytes' in value) || value['bytes'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function WorkstreamPatternEngineVisionEventsMetadataFromJSON(json: any): WorkstreamPatternEngineVisionEventsMetadata {
    return WorkstreamPatternEngineVisionEventsMetadataFromJSONTyped(json, false);
}

export function WorkstreamPatternEngineVisionEventsMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkstreamPatternEngineVisionEventsMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'bytes': ByteDescriptorFromJSON(json['bytes']),
        'total': json['total'],
        'oldest': json['oldest'] == null ? undefined : WorkstreamPatternEngineVisionEventFromJSON(json['oldest']),
        'newest': json['newest'] == null ? undefined : WorkstreamPatternEngineVisionEventFromJSON(json['newest']),
    };
}

export function WorkstreamPatternEngineVisionEventsMetadataToJSON(json: any): WorkstreamPatternEngineVisionEventsMetadata {
    return WorkstreamPatternEngineVisionEventsMetadataToJSONTyped(json, false);
}

export function WorkstreamPatternEngineVisionEventsMetadataToJSONTyped(value?: WorkstreamPatternEngineVisionEventsMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'bytes': ByteDescriptorToJSON(value['bytes']),
        'total': value['total'],
        'oldest': WorkstreamPatternEngineVisionEventToJSON(value['oldest']),
        'newest': WorkstreamPatternEngineVisionEventToJSON(value['newest']),
    };
}

