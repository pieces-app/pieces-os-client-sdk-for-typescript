/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SeededAssetEnrichment } from './SeededAssetEnrichment';
import {
    SeededAssetEnrichmentFromJSON,
    SeededAssetEnrichmentFromJSONTyped,
    SeededAssetEnrichmentToJSON,
    SeededAssetEnrichmentToJSONTyped,
} from './SeededAssetEnrichment';
import type { ApplicationNameEnum } from './ApplicationNameEnum';
import {
    ApplicationNameEnumFromJSON,
    ApplicationNameEnumFromJSONTyped,
    ApplicationNameEnumToJSON,
    ApplicationNameEnumToJSONTyped,
} from './ApplicationNameEnum';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { PrivacyEnum } from './PrivacyEnum';
import {
    PrivacyEnumFromJSON,
    PrivacyEnumFromJSONTyped,
    PrivacyEnumToJSON,
    PrivacyEnumToJSONTyped,
} from './PrivacyEnum';
import type { CapabilitiesEnum } from './CapabilitiesEnum';
import {
    CapabilitiesEnumFromJSON,
    CapabilitiesEnumFromJSONTyped,
    CapabilitiesEnumToJSON,
    CapabilitiesEnumToJSONTyped,
} from './CapabilitiesEnum';
import type { MechanismEnum } from './MechanismEnum';
import {
    MechanismEnumFromJSON,
    MechanismEnumFromJSONTyped,
    MechanismEnumToJSON,
    MechanismEnumToJSONTyped,
} from './MechanismEnum';
import type { PlatformEnum } from './PlatformEnum';
import {
    PlatformEnumFromJSON,
    PlatformEnumFromJSONTyped,
    PlatformEnumToJSON,
    PlatformEnumToJSONTyped,
} from './PlatformEnum';

/**
 * A Model to describe what application a format/analytics event originated.
 * 
 * mechanism: This will let us know where this came from.
 * ie.only 2 enums are used here or else throw and error.
 * default mechanism here is MANUAL- meaning that this came from our user Connecting an application.
 * INTERNAL - means that this came from a shareable link
 * @export
 * @interface Application
 */
export interface Application {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof Application
     */
    schema?: EmbeddedModelSchema;
    /**
     * The ID of the application at the device level
     * @type {string}
     * @memberof Application
     */
    id: string;
    /**
     * 
     * @type {ApplicationNameEnum}
     * @memberof Application
     */
    name: ApplicationNameEnum;
    /**
     * This is the specific version number 0.0.0
     * @type {string}
     * @memberof Application
     */
    version: string;
    /**
     * 
     * @type {PlatformEnum}
     * @memberof Application
     */
    platform: PlatformEnum;
    /**
     * 
     * @type {boolean}
     * @memberof Application
     */
    onboarded: boolean;
    /**
     * 
     * @type {PrivacyEnum}
     * @memberof Application
     */
    privacy: PrivacyEnum;
    /**
     * 
     * @type {CapabilitiesEnum}
     * @memberof Application
     */
    capabilities?: CapabilitiesEnum;
    /**
     * 
     * @type {MechanismEnum}
     * @memberof Application
     */
    mechanism?: MechanismEnum;
    /**
     * This is a proper that will let us know if we will proactivity unload all of your machine learning models.by default this is false.
     * @type {boolean}
     * @memberof Application
     */
    automaticUnload?: boolean;
    /**
     * 
     * @type {SeededAssetEnrichment}
     * @memberof Application
     */
    enrichment?: SeededAssetEnrichment;
}



/**
 * Check if a given object implements the Application interface.
 */
export function instanceOfApplication(value: object): value is Application {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('platform' in value) || value['platform'] === undefined) return false;
    if (!('onboarded' in value) || value['onboarded'] === undefined) return false;
    if (!('privacy' in value) || value['privacy'] === undefined) return false;
    return true;
}

export function ApplicationFromJSON(json: any): Application {
    return ApplicationFromJSONTyped(json, false);
}

export function ApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Application {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'id': json['id'],
        'name': ApplicationNameEnumFromJSON(json['name']),
        'version': json['version'],
        'platform': PlatformEnumFromJSON(json['platform']),
        'onboarded': json['onboarded'],
        'privacy': PrivacyEnumFromJSON(json['privacy']),
        'capabilities': json['capabilities'] == null ? undefined : CapabilitiesEnumFromJSON(json['capabilities']),
        'mechanism': json['mechanism'] == null ? undefined : MechanismEnumFromJSON(json['mechanism']),
        'automaticUnload': json['automaticUnload'] == null ? undefined : json['automaticUnload'],
        'enrichment': json['enrichment'] == null ? undefined : SeededAssetEnrichmentFromJSON(json['enrichment']),
    };
}

export function ApplicationToJSON(json: any): Application {
    return ApplicationToJSONTyped(json, false);
}

export function ApplicationToJSONTyped(value?: Application | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'id': value['id'],
        'name': ApplicationNameEnumToJSON(value['name']),
        'version': value['version'],
        'platform': PlatformEnumToJSON(value['platform']),
        'onboarded': value['onboarded'],
        'privacy': PrivacyEnumToJSON(value['privacy']),
        'capabilities': CapabilitiesEnumToJSON(value['capabilities']),
        'mechanism': MechanismEnumToJSON(value['mechanism']),
        'automaticUnload': value['automaticUnload'],
        'enrichment': SeededAssetEnrichmentToJSON(value['enrichment']),
    };
}

