/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { FlattenedOCRAnalysis } from './FlattenedOCRAnalysis';
import {
    FlattenedOCRAnalysisFromJSON,
    FlattenedOCRAnalysisFromJSONTyped,
    FlattenedOCRAnalysisToJSON,
    FlattenedOCRAnalysisToJSONTyped,
} from './FlattenedOCRAnalysis';

/**
 * 
 * @export
 * @interface FlattenedImageAnalysis
 */
export interface FlattenedImageAnalysis {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof FlattenedImageAnalysis
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof FlattenedImageAnalysis
     */
    id: string;
    /**
     * 
     * @type {FlattenedOCRAnalysis}
     * @memberof FlattenedImageAnalysis
     */
    ocr?: FlattenedOCRAnalysis;
    /**
     * this is a reference to our (parent)analysis
     * @type {string}
     * @memberof FlattenedImageAnalysis
     */
    analysis: string;
}


/**
 * Check if a given object implements the FlattenedImageAnalysis interface.
 */
export function instanceOfFlattenedImageAnalysis(value: object): value is FlattenedImageAnalysis {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('analysis' in value) || value['analysis'] === undefined) return false;
    return true;
}

export function FlattenedImageAnalysisFromJSON(json: any): FlattenedImageAnalysis {
    return FlattenedImageAnalysisFromJSONTyped(json, false);
}

export function FlattenedImageAnalysisFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlattenedImageAnalysis {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'id': json['id'],
        'ocr': json['ocr'] == null ? undefined : FlattenedOCRAnalysisFromJSON(json['ocr']),
        'analysis': json['analysis'],
    };
}

export function FlattenedImageAnalysisToJSON(json: any): FlattenedImageAnalysis {
    return FlattenedImageAnalysisToJSONTyped(json, false);
}

export function FlattenedImageAnalysisToJSONTyped(value?: FlattenedImageAnalysis | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'id': value['id'],
        'ocr': FlattenedOCRAnalysisToJSON(value['ocr']),
        'analysis': value['analysis'],
    };
}

