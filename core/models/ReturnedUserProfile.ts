/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserProfile } from './UserProfile';
import {
    UserProfileFromJSON,
    UserProfileFromJSONTyped,
    UserProfileToJSON,
    UserProfileToJSONTyped,
} from './UserProfile';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This is a modle strictly for the purpose that when calling '/user' and other user related endpoints the UserProfile could potentially be null, so we needed a model to do that.
 * @export
 * @interface ReturnedUserProfile
 */
export interface ReturnedUserProfile {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof ReturnedUserProfile
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {UserProfile}
     * @memberof ReturnedUserProfile
     */
    user?: UserProfile;
}


/**
 * Check if a given object implements the ReturnedUserProfile interface.
 */
export function instanceOfReturnedUserProfile(value: object): value is ReturnedUserProfile {
    return true;
}

export function ReturnedUserProfileFromJSON(json: any): ReturnedUserProfile {
    return ReturnedUserProfileFromJSONTyped(json, false);
}

export function ReturnedUserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReturnedUserProfile {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'user': json['user'] == null ? undefined : UserProfileFromJSON(json['user']),
    };
}

export function ReturnedUserProfileToJSON(json: any): ReturnedUserProfile {
    return ReturnedUserProfileToJSONTyped(json, false);
}

export function ReturnedUserProfileToJSONTyped(value?: ReturnedUserProfile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'user': UserProfileToJSON(value['user']),
    };
}

