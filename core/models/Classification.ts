/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { ClassificationGenericEnum } from './ClassificationGenericEnum';
import {
    ClassificationGenericEnumFromJSON,
    ClassificationGenericEnumFromJSONTyped,
    ClassificationGenericEnumToJSON,
    ClassificationGenericEnumToJSONTyped,
} from './ClassificationGenericEnum';
import type { ClassificationSpecificEnum } from './ClassificationSpecificEnum';
import {
    ClassificationSpecificEnumFromJSON,
    ClassificationSpecificEnumFromJSONTyped,
    ClassificationSpecificEnumToJSON,
    ClassificationSpecificEnumToJSONTyped,
} from './ClassificationSpecificEnum';
import type { ClassificationRenderingEnum } from './ClassificationRenderingEnum';
import {
    ClassificationRenderingEnumFromJSON,
    ClassificationRenderingEnumFromJSONTyped,
    ClassificationRenderingEnumToJSON,
    ClassificationRenderingEnumToJSONTyped,
} from './ClassificationRenderingEnum';

/**
 * This is the specific classification of an Asset's Format.(This is on a per format basis b/c an asset could have different formats that are different format representations of the Asset.)
 * @export
 * @interface Classification
 */
export interface Classification {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof Classification
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {ClassificationGenericEnum}
     * @memberof Classification
     */
    generic: ClassificationGenericEnum;
    /**
     * 
     * @type {ClassificationSpecificEnum}
     * @memberof Classification
     */
    specific: ClassificationSpecificEnum;
    /**
     * 
     * @type {ClassificationRenderingEnum}
     * @memberof Classification
     */
    rendering?: ClassificationRenderingEnum;
}



/**
 * Check if a given object implements the Classification interface.
 */
export function instanceOfClassification(value: object): value is Classification {
    if (!('generic' in value) || value['generic'] === undefined) return false;
    if (!('specific' in value) || value['specific'] === undefined) return false;
    return true;
}

export function ClassificationFromJSON(json: any): Classification {
    return ClassificationFromJSONTyped(json, false);
}

export function ClassificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Classification {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'generic': ClassificationGenericEnumFromJSON(json['generic']),
        'specific': ClassificationSpecificEnumFromJSON(json['specific']),
        'rendering': json['rendering'] == null ? undefined : ClassificationRenderingEnumFromJSON(json['rendering']),
    };
}

export function ClassificationToJSON(json: any): Classification {
    return ClassificationToJSONTyped(json, false);
}

export function ClassificationToJSONTyped(value?: Classification | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'generic': ClassificationGenericEnumToJSON(value['generic']),
        'specific': ClassificationSpecificEnumToJSON(value['specific']),
        'rendering': ClassificationRenderingEnumToJSON(value['rendering']),
    };
}

