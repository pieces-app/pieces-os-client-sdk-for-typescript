/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SeededSensitive } from './SeededSensitive';
import {
    SeededSensitiveFromJSON,
    SeededSensitiveFromJSONTyped,
    SeededSensitiveToJSON,
    SeededSensitiveToJSONTyped,
} from './SeededSensitive';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This will return a discoveredSensitive, with a seed that can be used to create if automatic is set to false. and will provide the original text provided.
 * @export
 * @interface DiscoveredSensitive
 */
export interface DiscoveredSensitive {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof DiscoveredSensitive
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {SeededSensitive}
     * @memberof DiscoveredSensitive
     */
    seed: SeededSensitive;
    /**
     * 
     * @type {string}
     * @memberof DiscoveredSensitive
     */
    text: string;
}


/**
 * Check if a given object implements the DiscoveredSensitive interface.
 */
export function instanceOfDiscoveredSensitive(value: object): value is DiscoveredSensitive {
    if (!('seed' in value) || value['seed'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function DiscoveredSensitiveFromJSON(json: any): DiscoveredSensitive {
    return DiscoveredSensitiveFromJSONTyped(json, false);
}

export function DiscoveredSensitiveFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscoveredSensitive {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'seed': SeededSensitiveFromJSON(json['seed']),
        'text': json['text'],
    };
}

export function DiscoveredSensitiveToJSON(json: any): DiscoveredSensitive {
    return DiscoveredSensitiveToJSONTyped(json, false);
}

export function DiscoveredSensitiveToJSONTyped(value?: DiscoveredSensitive | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'seed': SeededSensitiveToJSON(value['seed']),
        'text': value['text'],
    };
}

