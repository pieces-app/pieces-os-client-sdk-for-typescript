/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This is a detected External Application that comes from our endpoint that will get a snapshot of the installed applications on your machine.
 * @export
 * @interface DetectedExternalApplication
 */
export interface DetectedExternalApplication {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof DetectedExternalApplication
     */
    schema?: EmbeddedModelSchema;
    /**
     * this is the name of the application
     * @type {string}
     * @memberof DetectedExternalApplication
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DetectedExternalApplication
     */
    version?: string;
}

/**
 * Check if a given object implements the DetectedExternalApplication interface.
 */
export function instanceOfDetectedExternalApplication(value: object): value is DetectedExternalApplication {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function DetectedExternalApplicationFromJSON(json: any): DetectedExternalApplication {
    return DetectedExternalApplicationFromJSONTyped(json, false);
}

export function DetectedExternalApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DetectedExternalApplication {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'name': json['name'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function DetectedExternalApplicationToJSON(json: any): DetectedExternalApplication {
    return DetectedExternalApplicationToJSONTyped(json, false);
}

export function DetectedExternalApplicationToJSONTyped(value?: DetectedExternalApplication | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'name': value['name'],
        'version': value['version'],
    };
}

