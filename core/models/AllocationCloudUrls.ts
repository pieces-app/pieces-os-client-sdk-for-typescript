/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { AllocationCloudUrl } from './AllocationCloudUrl';
import {
    AllocationCloudUrlFromJSON,
    AllocationCloudUrlFromJSONTyped,
    AllocationCloudUrlToJSON,
    AllocationCloudUrlToJSONTyped,
} from './AllocationCloudUrl';

/**
 * you will have at minimum 2 urls,
 * 
 * base: is the default url of your cloud.
 * 
 * id: is the branded url, uuid.pieces.cloud.
 * 
 * (optional) vanity: is the custom branded url, mark.pieces.cloud
 * @export
 * @interface AllocationCloudUrls
 */
export interface AllocationCloudUrls {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof AllocationCloudUrls
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {AllocationCloudUrl}
     * @memberof AllocationCloudUrls
     */
    base: AllocationCloudUrl;
    /**
     * 
     * @type {AllocationCloudUrl}
     * @memberof AllocationCloudUrls
     */
    id: AllocationCloudUrl;
    /**
     * 
     * @type {AllocationCloudUrl}
     * @memberof AllocationCloudUrls
     */
    vanity?: AllocationCloudUrl;
}

/**
 * Check if a given object implements the AllocationCloudUrls interface.
 */
export function instanceOfAllocationCloudUrls(value: object): value is AllocationCloudUrls {
    if (!('base' in value) || value['base'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function AllocationCloudUrlsFromJSON(json: any): AllocationCloudUrls {
    return AllocationCloudUrlsFromJSONTyped(json, false);
}

export function AllocationCloudUrlsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllocationCloudUrls {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'base': AllocationCloudUrlFromJSON(json['base']),
        'id': AllocationCloudUrlFromJSON(json['id']),
        'vanity': json['vanity'] == null ? undefined : AllocationCloudUrlFromJSON(json['vanity']),
    };
}

export function AllocationCloudUrlsToJSON(json: any): AllocationCloudUrls {
    return AllocationCloudUrlsToJSONTyped(json, false);
}

export function AllocationCloudUrlsToJSONTyped(value?: AllocationCloudUrls | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'base': AllocationCloudUrlToJSON(value['base']),
        'id': AllocationCloudUrlToJSON(value['id']),
        'vanity': AllocationCloudUrlToJSON(value['vanity']),
    };
}

