/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Auth0OpenAIUserMetadata } from './Auth0OpenAIUserMetadata';
import {
    Auth0OpenAIUserMetadataFromJSON,
    Auth0OpenAIUserMetadataFromJSONTyped,
    Auth0OpenAIUserMetadataToJSON,
    Auth0OpenAIUserMetadataToJSONTyped,
} from './Auth0OpenAIUserMetadata';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { Auth0UserAllocationMetadata } from './Auth0UserAllocationMetadata';
import {
    Auth0UserAllocationMetadataFromJSON,
    Auth0UserAllocationMetadataFromJSONTyped,
    Auth0UserAllocationMetadataToJSON,
    Auth0UserAllocationMetadataToJSONTyped,
} from './Auth0UserAllocationMetadata';
import type { AnonymousTemporalRange } from './AnonymousTemporalRange';
import {
    AnonymousTemporalRangeFromJSON,
    AnonymousTemporalRangeFromJSONTyped,
    AnonymousTemporalRangeToJSON,
    AnonymousTemporalRangeToJSONTyped,
} from './AnonymousTemporalRange';

/**
 * User Metadata from Descope
 * @export
 * @interface DescopeUserMetadata
 */
export interface DescopeUserMetadata {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof DescopeUserMetadata
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof DescopeUserMetadata
     */
    globalId: string;
    /**
     * this is the vanityname of the user.(set from their custom CNAME dns record.) ie mark.pieces.cloud where "mark" is the vanityname.
     * @type {string}
     * @memberof DescopeUserMetadata
     */
    vanityname?: string;
    /**
     * 
     * @type {Auth0UserAllocationMetadata}
     * @memberof DescopeUserMetadata
     */
    allocation?: Auth0UserAllocationMetadata;
    /**
     * 
     * @type {Auth0OpenAIUserMetadata}
     * @memberof DescopeUserMetadata
     */
    openAI?: Auth0OpenAIUserMetadata;
    /**
     * 
     * @type {AnonymousTemporalRange}
     * @memberof DescopeUserMetadata
     */
    beta?: AnonymousTemporalRange;
    /**
     * 
     * @type {string}
     * @memberof DescopeUserMetadata
     */
    descopeId: string;
}

/**
 * Check if a given object implements the DescopeUserMetadata interface.
 */
export function instanceOfDescopeUserMetadata(value: object): value is DescopeUserMetadata {
    if (!('globalId' in value) || value['globalId'] === undefined) return false;
    if (!('descopeId' in value) || value['descopeId'] === undefined) return false;
    return true;
}

export function DescopeUserMetadataFromJSON(json: any): DescopeUserMetadata {
    return DescopeUserMetadataFromJSONTyped(json, false);
}

export function DescopeUserMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): DescopeUserMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'globalId': json['global_id'],
        'vanityname': json['vanityname'] == null ? undefined : json['vanityname'],
        'allocation': json['allocation'] == null ? undefined : Auth0UserAllocationMetadataFromJSON(json['allocation']),
        'openAI': json['open_AI'] == null ? undefined : Auth0OpenAIUserMetadataFromJSON(json['open_AI']),
        'beta': json['beta'] == null ? undefined : AnonymousTemporalRangeFromJSON(json['beta']),
        'descopeId': json['descope_id'],
    };
}

export function DescopeUserMetadataToJSON(json: any): DescopeUserMetadata {
    return DescopeUserMetadataToJSONTyped(json, false);
}

export function DescopeUserMetadataToJSONTyped(value?: DescopeUserMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'global_id': value['globalId'],
        'vanityname': value['vanityname'],
        'allocation': Auth0UserAllocationMetadataToJSON(value['allocation']),
        'open_AI': Auth0OpenAIUserMetadataToJSON(value['openAI']),
        'beta': AnonymousTemporalRangeToJSON(value['beta']),
        'descope_id': value['descopeId'],
    };
}

