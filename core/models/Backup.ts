/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { GroupedTimestamp } from './GroupedTimestamp';
import {
    GroupedTimestampFromJSON,
    GroupedTimestampFromJSONTyped,
    GroupedTimestampToJSON,
    GroupedTimestampToJSONTyped,
} from './GroupedTimestamp';
import type { PlatformEnum } from './PlatformEnum';
import {
    PlatformEnumFromJSON,
    PlatformEnumFromJSONTyped,
    PlatformEnumToJSON,
    PlatformEnumToJSONTyped,
} from './PlatformEnum';

/**
 * This is a cloud Backup. This is specific metadata needed inorder to retrieve a Backup.
 * @export
 * @interface Backup
 */
export interface Backup {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof Backup
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof Backup
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Backup
     */
    version: string;
    /**
     * 
     * @type {string}
     * @memberof Backup
     */
    timestamp: string;
    /**
     * 
     * @type {number}
     * @memberof Backup
     */
    bytes: number;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof Backup
     */
    created: GroupedTimestamp;
    /**
     * 
     * @type {string}
     * @memberof Backup
     */
    deviceName: string;
    /**
     * 
     * @type {PlatformEnum}
     * @memberof Backup
     */
    platform: PlatformEnum;
}


/**
 * Check if a given object implements the Backup interface.
 */
export function instanceOfBackup(value: object): value is Backup {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('bytes' in value) || value['bytes'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('deviceName' in value) || value['deviceName'] === undefined) return false;
    if (!('platform' in value) || value['platform'] === undefined) return false;
    return true;
}

export function BackupFromJSON(json: any): Backup {
    return BackupFromJSONTyped(json, false);
}

export function BackupFromJSONTyped(json: any, ignoreDiscriminator: boolean): Backup {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'id': json['id'],
        'version': json['version'],
        'timestamp': json['timestamp'],
        'bytes': json['bytes'],
        'created': GroupedTimestampFromJSON(json['created']),
        'deviceName': json['device_name'],
        'platform': PlatformEnumFromJSON(json['platform']),
    };
}

export function BackupToJSON(json: any): Backup {
    return BackupToJSONTyped(json, false);
}

export function BackupToJSONTyped(value?: Backup | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'id': value['id'],
        'version': value['version'],
        'timestamp': value['timestamp'],
        'bytes': value['bytes'],
        'created': GroupedTimestampToJSON(value['created']),
        'device_name': value['deviceName'],
        'platform': PlatformEnumToJSON(value['platform']),
    };
}

