/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OllamaDeploymentStatusEnum } from './OllamaDeploymentStatusEnum';
import {
    OllamaDeploymentStatusEnumFromJSON,
    OllamaDeploymentStatusEnumFromJSONTyped,
    OllamaDeploymentStatusEnumToJSON,
    OllamaDeploymentStatusEnumToJSONTyped,
} from './OllamaDeploymentStatusEnum';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { GroupedTimestamp } from './GroupedTimestamp';
import {
    GroupedTimestampFromJSON,
    GroupedTimestampFromJSONTyped,
    GroupedTimestampToJSON,
    GroupedTimestampToJSONTyped,
} from './GroupedTimestamp';

/**
 * A deployment will be used in 4 cases:
 * 1. used to describe an installation in progress
 * 2. used to describe an update in progress
 * 3. used to say what deployment will be needed to upgrade to.
 * 4. used to say what the current version of ollama is present on the machine.
 * @export
 * @interface OllamaDeployment
 */
export interface OllamaDeployment {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof OllamaDeployment
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof OllamaDeployment
     */
    id?: string;
    /**
     * 
     * @type {OllamaDeploymentStatusEnum}
     * @memberof OllamaDeployment
     */
    status?: OllamaDeploymentStatusEnum;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof OllamaDeployment
     */
    updated?: GroupedTimestamp;
    /**
     * Optionally if the update is in progress you will recieve a download percent(from 0-100).
     * @type {number}
     * @memberof OllamaDeployment
     */
    percentage?: number;
    /**
     * 
     * @type {string}
     * @memberof OllamaDeployment
     */
    version: string;
    /**
     * Optionally set, specifically in the case where an update is required, and a user need to take manual action.
     * @type {boolean}
     * @memberof OllamaDeployment
     */
    userManaged?: boolean;
}


/**
 * Check if a given object implements the OllamaDeployment interface.
 */
export function instanceOfOllamaDeployment(value: object): value is OllamaDeployment {
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function OllamaDeploymentFromJSON(json: any): OllamaDeployment {
    return OllamaDeploymentFromJSONTyped(json, false);
}

export function OllamaDeploymentFromJSONTyped(json: any, ignoreDiscriminator: boolean): OllamaDeployment {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'id': json['id'] == null ? undefined : json['id'],
        'status': OllamaDeploymentStatusEnumFromJSON(json['status']),
        'updated': json['updated'] == null ? undefined : GroupedTimestampFromJSON(json['updated']),
        'percentage': json['percentage'] == null ? undefined : json['percentage'],
        'version': json['version'],
        'userManaged': json['userManaged'] == null ? undefined : json['userManaged'],
    };
}

export function OllamaDeploymentToJSON(json: any): OllamaDeployment {
    return OllamaDeploymentToJSONTyped(json, false);
}

export function OllamaDeploymentToJSONTyped(value?: OllamaDeployment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'id': value['id'],
        'status': OllamaDeploymentStatusEnumToJSON(value['status']),
        'updated': GroupedTimestampToJSON(value['updated']),
        'percentage': value['percentage'],
        'version': value['version'],
        'userManaged': value['userManaged'],
    };
}

