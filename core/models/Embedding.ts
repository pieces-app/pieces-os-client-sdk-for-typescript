/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Model } from './Model';
import {
    ModelFromJSON,
    ModelFromJSONTyped,
    ModelToJSON,
    ModelToJSONTyped,
} from './Model';
import type { GroupedTimestamp } from './GroupedTimestamp';
import {
    GroupedTimestampFromJSON,
    GroupedTimestampFromJSONTyped,
    GroupedTimestampToJSON,
    GroupedTimestampToJSONTyped,
} from './GroupedTimestamp';

/**
 * 
 * @export
 * @interface Embedding
 */
export interface Embedding {
    /**
     * this is the raw value of the embedding
     * @type {Array<number>}
     * @memberof Embedding
     */
    raw: Array<number>;
    /**
     * 
     * @type {Model}
     * @memberof Embedding
     */
    model: Model;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof Embedding
     */
    created: GroupedTimestamp;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof Embedding
     */
    updated: GroupedTimestamp;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof Embedding
     */
    deleted?: GroupedTimestamp;
}

/**
 * Check if a given object implements the Embedding interface.
 */
export function instanceOfEmbedding(value: object): value is Embedding {
    if (!('raw' in value) || value['raw'] === undefined) return false;
    if (!('model' in value) || value['model'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    return true;
}

export function EmbeddingFromJSON(json: any): Embedding {
    return EmbeddingFromJSONTyped(json, false);
}

export function EmbeddingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Embedding {
    if (json == null) {
        return json;
    }
    return {
        
        'raw': json['raw'],
        'model': ModelFromJSON(json['model']),
        'created': GroupedTimestampFromJSON(json['created']),
        'updated': GroupedTimestampFromJSON(json['updated']),
        'deleted': json['deleted'] == null ? undefined : GroupedTimestampFromJSON(json['deleted']),
    };
}

export function EmbeddingToJSON(json: any): Embedding {
    return EmbeddingToJSONTyped(json, false);
}

export function EmbeddingToJSONTyped(value?: Embedding | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'raw': value['raw'],
        'model': ModelToJSON(value['model']),
        'created': GroupedTimestampToJSON(value['created']),
        'updated': GroupedTimestampToJSON(value['updated']),
        'deleted': GroupedTimestampToJSON(value['deleted']),
    };
}

