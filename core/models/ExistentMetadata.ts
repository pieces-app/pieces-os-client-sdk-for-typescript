/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This is a shared output model for all the exists endpoints:
 * /tags/exists : value here is the tag that you want to see if it exists.
 * /websites/exists: value here is the url you want to see if it exists
 * @export
 * @interface ExistentMetadata
 */
export interface ExistentMetadata {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof ExistentMetadata
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof ExistentMetadata
     */
    value: string;
}

/**
 * Check if a given object implements the ExistentMetadata interface.
 */
export function instanceOfExistentMetadata(value: object): value is ExistentMetadata {
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function ExistentMetadataFromJSON(json: any): ExistentMetadata {
    return ExistentMetadataFromJSONTyped(json, false);
}

export function ExistentMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExistentMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'value': json['value'],
    };
}

export function ExistentMetadataToJSON(json: any): ExistentMetadata {
    return ExistentMetadataToJSONTyped(json, false);
}

export function ExistentMetadataToJSONTyped(value?: ExistentMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'value': value['value'],
    };
}

