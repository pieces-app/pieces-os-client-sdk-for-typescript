/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This is the input model for '/machine_learning/text/technical_language/parsers/segmentation'
 * 
 * This will take the unsegmentedText here!
 * @export
 * @interface UnsegmentedTechnicalLanguage
 */
export interface UnsegmentedTechnicalLanguage {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof UnsegmentedTechnicalLanguage
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof UnsegmentedTechnicalLanguage
     */
    value: string;
}

/**
 * Check if a given object implements the UnsegmentedTechnicalLanguage interface.
 */
export function instanceOfUnsegmentedTechnicalLanguage(value: object): value is UnsegmentedTechnicalLanguage {
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function UnsegmentedTechnicalLanguageFromJSON(json: any): UnsegmentedTechnicalLanguage {
    return UnsegmentedTechnicalLanguageFromJSONTyped(json, false);
}

export function UnsegmentedTechnicalLanguageFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnsegmentedTechnicalLanguage {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'value': json['value'],
    };
}

export function UnsegmentedTechnicalLanguageToJSON(json: any): UnsegmentedTechnicalLanguage {
    return UnsegmentedTechnicalLanguageToJSONTyped(json, false);
}

export function UnsegmentedTechnicalLanguageToJSONTyped(value?: UnsegmentedTechnicalLanguage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'value': value['value'],
    };
}

