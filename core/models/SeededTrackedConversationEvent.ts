/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferencedConversation } from './ReferencedConversation';
import {
    ReferencedConversationFromJSON,
    ReferencedConversationFromJSONTyped,
    ReferencedConversationToJSON,
    ReferencedConversationToJSONTyped,
} from './ReferencedConversation';
import type { TrackedConversationEventIdentifierDescriptionPairs } from './TrackedConversationEventIdentifierDescriptionPairs';
import {
    TrackedConversationEventIdentifierDescriptionPairsFromJSON,
    TrackedConversationEventIdentifierDescriptionPairsFromJSONTyped,
    TrackedConversationEventIdentifierDescriptionPairsToJSON,
    TrackedConversationEventIdentifierDescriptionPairsToJSONTyped,
} from './TrackedConversationEventIdentifierDescriptionPairs';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { TrackedConversationEventMetadata } from './TrackedConversationEventMetadata';
import {
    TrackedConversationEventMetadataFromJSON,
    TrackedConversationEventMetadataFromJSONTyped,
    TrackedConversationEventMetadataToJSON,
    TrackedConversationEventMetadataToJSONTyped,
} from './TrackedConversationEventMetadata';

/**
 * This is a pre-created(seed) TrackedConversationEvent
 * @export
 * @interface SeededTrackedConversationEvent
 */
export interface SeededTrackedConversationEvent {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededTrackedConversationEvent
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {TrackedConversationEventIdentifierDescriptionPairs}
     * @memberof SeededTrackedConversationEvent
     */
    identifierDescriptionPair: TrackedConversationEventIdentifierDescriptionPairs;
    /**
     * 
     * @type {ReferencedConversation}
     * @memberof SeededTrackedConversationEvent
     */
    conversation: ReferencedConversation;
    /**
     * 
     * @type {TrackedConversationEventMetadata}
     * @memberof SeededTrackedConversationEvent
     */
    metadata?: TrackedConversationEventMetadata;
}


/**
 * Check if a given object implements the SeededTrackedConversationEvent interface.
 */
export function instanceOfSeededTrackedConversationEvent(value: object): value is SeededTrackedConversationEvent {
    if (!('identifierDescriptionPair' in value) || value['identifierDescriptionPair'] === undefined) return false;
    if (!('conversation' in value) || value['conversation'] === undefined) return false;
    return true;
}

export function SeededTrackedConversationEventFromJSON(json: any): SeededTrackedConversationEvent {
    return SeededTrackedConversationEventFromJSONTyped(json, false);
}

export function SeededTrackedConversationEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededTrackedConversationEvent {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'identifierDescriptionPair': TrackedConversationEventIdentifierDescriptionPairsFromJSON(json['identifier_description_pair']),
        'conversation': ReferencedConversationFromJSON(json['conversation']),
        'metadata': json['metadata'] == null ? undefined : TrackedConversationEventMetadataFromJSON(json['metadata']),
    };
}

export function SeededTrackedConversationEventToJSON(json: any): SeededTrackedConversationEvent {
    return SeededTrackedConversationEventToJSONTyped(json, false);
}

export function SeededTrackedConversationEventToJSONTyped(value?: SeededTrackedConversationEvent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'identifier_description_pair': TrackedConversationEventIdentifierDescriptionPairsToJSON(value['identifierDescriptionPair']),
        'conversation': ReferencedConversationToJSON(value['conversation']),
        'metadata': TrackedConversationEventMetadataToJSON(value['metadata']),
    };
}

