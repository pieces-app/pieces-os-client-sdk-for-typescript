/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { QGPTQuestionAnswers } from './QGPTQuestionAnswers';
import {
    QGPTQuestionAnswersFromJSON,
    QGPTQuestionAnswersFromJSONTyped,
    QGPTQuestionAnswersToJSON,
    QGPTQuestionAnswersToJSONTyped,
} from './QGPTQuestionAnswers';

/**
 * This is the output/returned value from the /qgpt/question endpoint. && /qgpt/followup
 * 
 * This will just have a single required property. the possible answers to the question, with a score.
 * @export
 * @interface QGPTQuestionOutput
 */
export interface QGPTQuestionOutput {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof QGPTQuestionOutput
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {QGPTQuestionAnswers}
     * @memberof QGPTQuestionOutput
     */
    answers: QGPTQuestionAnswers;
}


/**
 * Check if a given object implements the QGPTQuestionOutput interface.
 */
export function instanceOfQGPTQuestionOutput(value: object): value is QGPTQuestionOutput {
    if (!('answers' in value) || value['answers'] === undefined) return false;
    return true;
}

export function QGPTQuestionOutputFromJSON(json: any): QGPTQuestionOutput {
    return QGPTQuestionOutputFromJSONTyped(json, false);
}

export function QGPTQuestionOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): QGPTQuestionOutput {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'answers': QGPTQuestionAnswersFromJSON(json['answers']),
    };
}

export function QGPTQuestionOutputToJSON(json: any): QGPTQuestionOutput {
    return QGPTQuestionOutputToJSONTyped(json, false);
}

export function QGPTQuestionOutputToJSONTyped(value?: QGPTQuestionOutput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'answers': QGPTQuestionAnswersToJSON(value['answers']),
    };
}

