/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { Classification } from './Classification';
import {
    ClassificationFromJSON,
    ClassificationFromJSONTyped,
    ClassificationToJSON,
    ClassificationToJSONTyped,
} from './Classification';
import type { TransferableString } from './TransferableString';
import {
    TransferableStringFromJSON,
    TransferableStringFromJSONTyped,
    TransferableStringToJSON,
    TransferableStringToJSONTyped,
} from './TransferableString';

/**
 * This is a given bit of text/code that is selected in the browser, this can be a copy/paste/selection
 * @export
 * @interface BrowserSelection
 */
export interface BrowserSelection {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof BrowserSelection
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Classification}
     * @memberof BrowserSelection
     */
    classification: Classification;
    /**
     * 
     * @type {TransferableString}
     * @memberof BrowserSelection
     */
    value: TransferableString;
}


/**
 * Check if a given object implements the BrowserSelection interface.
 */
export function instanceOfBrowserSelection(value: object): value is BrowserSelection {
    if (!('classification' in value) || value['classification'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function BrowserSelectionFromJSON(json: any): BrowserSelection {
    return BrowserSelectionFromJSONTyped(json, false);
}

export function BrowserSelectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): BrowserSelection {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'classification': ClassificationFromJSON(json['classification']),
        'value': TransferableStringFromJSON(json['value']),
    };
}

export function BrowserSelectionToJSON(json: any): BrowserSelection {
    return BrowserSelectionToJSONTyped(json, false);
}

export function BrowserSelectionToJSONTyped(value?: BrowserSelection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'classification': ClassificationToJSON(value['classification']),
        'value': TransferableStringToJSON(value['value']),
    };
}

