/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Auth0UserMetadata } from './Auth0UserMetadata';
import {
    Auth0UserMetadataFromJSON,
    Auth0UserMetadataFromJSONTyped,
    Auth0UserMetadataToJSON,
    Auth0UserMetadataToJSONTyped,
} from './Auth0UserMetadata';
import type { Auth0Identity } from './Auth0Identity';
import {
    Auth0IdentityFromJSON,
    Auth0IdentityFromJSONTyped,
    Auth0IdentityToJSON,
    Auth0IdentityToJSONTyped,
} from './Auth0Identity';

/**
 * 
 * @export
 * @interface Auth0User
 */
export interface Auth0User {
    /**
     * 	User's full name.
     * @type {string}
     * @memberof Auth0User
     */
    name?: string;
    /**
     * mapped from picture.URL pointing to the user's profile picture. 
     * @type {string}
     * @memberof Auth0User
     */
    picture?: string;
    /**
     * 
     * @type {string}
     * @memberof Auth0User
     */
    email?: string;
    /**
     * 
     * @type {Date}
     * @memberof Auth0User
     */
    createdAt?: Date;
    /**
     * Indicates whether the user has verified their email address. Mapped from email_verified -> emailVerified.
     * @type {boolean}
     * @memberof Auth0User
     */
    emailVerified?: boolean;
    /**
     * User's family name.
     * @type {string}
     * @memberof Auth0User
     */
    familyName?: string;
    /**
     * User's given name.
     * 
     * @type {string}
     * @memberof Auth0User
     */
    givenName?: string;
    /**
     * Contains info retrieved from the identity provider with which the user originally authenticates.
     * @type {Array<Auth0Identity>}
     * @memberof Auth0User
     */
    identities?: Array<Auth0Identity>;
    /**
     * User's nickname.
     * 
     * @type {string}
     * @memberof Auth0User
     */
    nickname?: string;
    /**
     * 
     * @type {Date}
     * @memberof Auth0User
     */
    updatedAt?: Date;
    /**
     * 	(unique) User's username.
     * 	
     * @type {string}
     * @memberof Auth0User
     */
    username?: string;
    /**
     * 
     * @type {Auth0UserMetadata}
     * @memberof Auth0User
     */
    userMetadata?: Auth0UserMetadata;
    /**
     * 
     * @type {string}
     * @memberof Auth0User
     */
    locale?: string;
    /**
     * 
     * @type {string}
     * @memberof Auth0User
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof Auth0User
     */
    lastIp?: string;
    /**
     * 
     * @type {Date}
     * @memberof Auth0User
     */
    lastLogin?: Date;
    /**
     * 
     * @type {number}
     * @memberof Auth0User
     */
    loginsCount?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof Auth0User
     */
    blockedFor?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Auth0User
     */
    guardianAuthenticators?: Array<string>;
}

/**
 * Check if a given object implements the Auth0User interface.
 */
export function instanceOfAuth0User(value: object): value is Auth0User {
    return true;
}

export function Auth0UserFromJSON(json: any): Auth0User {
    return Auth0UserFromJSONTyped(json, false);
}

export function Auth0UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): Auth0User {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'picture': json['picture'] == null ? undefined : json['picture'],
        'email': json['email'] == null ? undefined : json['email'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'emailVerified': json['email_verified'] == null ? undefined : json['email_verified'],
        'familyName': json['family_name'] == null ? undefined : json['family_name'],
        'givenName': json['given_name'] == null ? undefined : json['given_name'],
        'identities': json['identities'] == null ? undefined : ((json['identities'] as Array<any>).map(Auth0IdentityFromJSON)),
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'username': json['username'] == null ? undefined : json['username'],
        'userMetadata': json['user_metadata'] == null ? undefined : Auth0UserMetadataFromJSON(json['user_metadata']),
        'locale': json['locale'] == null ? undefined : json['locale'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'lastIp': json['last_ip'] == null ? undefined : json['last_ip'],
        'lastLogin': json['last_login'] == null ? undefined : (new Date(json['last_login'])),
        'loginsCount': json['logins_count'] == null ? undefined : json['logins_count'],
        'blockedFor': json['blocked_for'] == null ? undefined : json['blocked_for'],
        'guardianAuthenticators': json['guardian_authenticators'] == null ? undefined : json['guardian_authenticators'],
    };
}

export function Auth0UserToJSON(json: any): Auth0User {
    return Auth0UserToJSONTyped(json, false);
}

export function Auth0UserToJSONTyped(value?: Auth0User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'picture': value['picture'],
        'email': value['email'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'email_verified': value['emailVerified'],
        'family_name': value['familyName'],
        'given_name': value['givenName'],
        'identities': value['identities'] == null ? undefined : ((value['identities'] as Array<any>).map(Auth0IdentityToJSON)),
        'nickname': value['nickname'],
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'username': value['username'],
        'user_metadata': Auth0UserMetadataToJSON(value['userMetadata']),
        'locale': value['locale'],
        'user_id': value['userId'],
        'last_ip': value['lastIp'],
        'last_login': value['lastLogin'] == null ? undefined : ((value['lastLogin']).toISOString()),
        'logins_count': value['loginsCount'],
        'blocked_for': value['blockedFor'],
        'guardian_authenticators': value['guardianAuthenticators'],
    };
}

