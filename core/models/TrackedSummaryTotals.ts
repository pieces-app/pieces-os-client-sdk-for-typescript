/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkstreamPatternEngineStatus } from './WorkstreamPatternEngineStatus';
import {
    WorkstreamPatternEngineStatusFromJSON,
    WorkstreamPatternEngineStatusFromJSONTyped,
    WorkstreamPatternEngineStatusToJSON,
    WorkstreamPatternEngineStatusToJSONTyped,
} from './WorkstreamPatternEngineStatus';

/**
 * This is the counts of things that users can add.
 * @export
 * @interface TrackedSummaryTotals
 */
export interface TrackedSummaryTotals {
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    assets: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    tags: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    websites: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    persons: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    sensitives: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    shares: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    copilotSends: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    copilotReceives: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    copilotSessions: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    copilotConversations: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    productivityScore: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    searches: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    references: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    reuses: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    anchorFiles: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    anchorFolders: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    isrReports: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    requests?: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    workstreamEvents?: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    workstreamSummaries?: number;
    /**
     * 
     * @type {number}
     * @memberof TrackedSummaryTotals
     */
    workstreamPatternEngineSources?: number;
    /**
     * 
     * @type {WorkstreamPatternEngineStatus}
     * @memberof TrackedSummaryTotals
     */
    workstreamPatternEngineStatus?: WorkstreamPatternEngineStatus;
}


/**
 * Check if a given object implements the TrackedSummaryTotals interface.
 */
export function instanceOfTrackedSummaryTotals(value: object): value is TrackedSummaryTotals {
    if (!('assets' in value) || value['assets'] === undefined) return false;
    if (!('tags' in value) || value['tags'] === undefined) return false;
    if (!('websites' in value) || value['websites'] === undefined) return false;
    if (!('persons' in value) || value['persons'] === undefined) return false;
    if (!('sensitives' in value) || value['sensitives'] === undefined) return false;
    if (!('shares' in value) || value['shares'] === undefined) return false;
    if (!('copilotSends' in value) || value['copilotSends'] === undefined) return false;
    if (!('copilotReceives' in value) || value['copilotReceives'] === undefined) return false;
    if (!('copilotSessions' in value) || value['copilotSessions'] === undefined) return false;
    if (!('copilotConversations' in value) || value['copilotConversations'] === undefined) return false;
    if (!('productivityScore' in value) || value['productivityScore'] === undefined) return false;
    if (!('searches' in value) || value['searches'] === undefined) return false;
    if (!('references' in value) || value['references'] === undefined) return false;
    if (!('reuses' in value) || value['reuses'] === undefined) return false;
    if (!('anchorFiles' in value) || value['anchorFiles'] === undefined) return false;
    if (!('anchorFolders' in value) || value['anchorFolders'] === undefined) return false;
    if (!('isrReports' in value) || value['isrReports'] === undefined) return false;
    return true;
}

export function TrackedSummaryTotalsFromJSON(json: any): TrackedSummaryTotals {
    return TrackedSummaryTotalsFromJSONTyped(json, false);
}

export function TrackedSummaryTotalsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedSummaryTotals {
    if (json == null) {
        return json;
    }
    return {
        
        'assets': json['assets'],
        'tags': json['tags'],
        'websites': json['websites'],
        'persons': json['persons'],
        'sensitives': json['sensitives'],
        'shares': json['shares'],
        'copilotSends': json['copilot_sends'],
        'copilotReceives': json['copilot_receives'],
        'copilotSessions': json['copilot_sessions'],
        'copilotConversations': json['copilot_conversations'],
        'productivityScore': json['productivity_score'],
        'searches': json['searches'],
        'references': json['references'],
        'reuses': json['reuses'],
        'anchorFiles': json['anchor_files'],
        'anchorFolders': json['anchor_folders'],
        'isrReports': json['isr_reports'],
        'requests': json['requests'] == null ? undefined : json['requests'],
        'workstreamEvents': json['workstream_events'] == null ? undefined : json['workstream_events'],
        'workstreamSummaries': json['workstream_summaries'] == null ? undefined : json['workstream_summaries'],
        'workstreamPatternEngineSources': json['workstream_pattern_engine_sources'] == null ? undefined : json['workstream_pattern_engine_sources'],
        'workstreamPatternEngineStatus': json['workstream_pattern_engine_status'] == null ? undefined : WorkstreamPatternEngineStatusFromJSON(json['workstream_pattern_engine_status']),
    };
}

export function TrackedSummaryTotalsToJSON(json: any): TrackedSummaryTotals {
    return TrackedSummaryTotalsToJSONTyped(json, false);
}

export function TrackedSummaryTotalsToJSONTyped(value?: TrackedSummaryTotals | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'assets': value['assets'],
        'tags': value['tags'],
        'websites': value['websites'],
        'persons': value['persons'],
        'sensitives': value['sensitives'],
        'shares': value['shares'],
        'copilot_sends': value['copilotSends'],
        'copilot_receives': value['copilotReceives'],
        'copilot_sessions': value['copilotSessions'],
        'copilot_conversations': value['copilotConversations'],
        'productivity_score': value['productivityScore'],
        'searches': value['searches'],
        'references': value['references'],
        'reuses': value['reuses'],
        'anchor_files': value['anchorFiles'],
        'anchor_folders': value['anchorFolders'],
        'isr_reports': value['isrReports'],
        'requests': value['requests'],
        'workstream_events': value['workstreamEvents'],
        'workstream_summaries': value['workstreamSummaries'],
        'workstream_pattern_engine_sources': value['workstreamPatternEngineSources'],
        'workstream_pattern_engine_status': WorkstreamPatternEngineStatusToJSON(value['workstreamPatternEngineStatus']),
    };
}

