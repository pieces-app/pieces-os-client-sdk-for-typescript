/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * Bytes is a Model for A FileFormat. Raw and file are the only 2 that are currently supported. Raw and file are an array of integers that represent the file.Typical conversion UTF8 -> array[int] or UTF8 -> array[bytes(in hexidecimal)] -> array[int]. Either way you convert is up to you but the type we need here is an array of integers.
 * 
 * [NOT IMPLEMENTED] base64, base64_url, data_url
 * [IMPLEMENTED] raw
 * @export
 * @interface TransferableBytes
 */
export interface TransferableBytes {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TransferableBytes
     */
    schema?: EmbeddedModelSchema;
    /**
     * IMPLEMENTED
     * @type {Array<number>}
     * @memberof TransferableBytes
     */
    raw?: Array<number>;
    /**
     * NOT IMPLEMENTED
     * @type {Array<number>}
     * @memberof TransferableBytes
     */
    base64?: Array<number>;
    /**
     * NOT IMPLEMENTED
     * @type {Array<number>}
     * @memberof TransferableBytes
     */
    base64Url?: Array<number>;
    /**
     * NOT IMPLEMENTED
     * @type {Array<number>}
     * @memberof TransferableBytes
     */
    dataUrl?: Array<number>;
}


/**
 * Check if a given object implements the TransferableBytes interface.
 */
export function instanceOfTransferableBytes(value: object): value is TransferableBytes {
    return true;
}

export function TransferableBytesFromJSON(json: any): TransferableBytes {
    return TransferableBytesFromJSONTyped(json, false);
}

export function TransferableBytesFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferableBytes {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'raw': json['raw'] == null ? undefined : json['raw'],
        'base64': json['base64'] == null ? undefined : json['base64'],
        'base64Url': json['base64_url'] == null ? undefined : json['base64_url'],
        'dataUrl': json['data_url'] == null ? undefined : json['data_url'],
    };
}

export function TransferableBytesToJSON(json: any): TransferableBytes {
    return TransferableBytesToJSONTyped(json, false);
}

export function TransferableBytesToJSONTyped(value?: TransferableBytes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'raw': value['raw'],
        'base64': value['base64'],
        'base64_url': value['base64Url'],
        'data_url': value['dataUrl'],
    };
}

