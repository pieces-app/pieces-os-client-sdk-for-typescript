/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkstreamPatternEngineSource } from './WorkstreamPatternEngineSource';
import {
    WorkstreamPatternEngineSourceFromJSON,
    WorkstreamPatternEngineSourceFromJSONTyped,
    WorkstreamPatternEngineSourceToJSON,
    WorkstreamPatternEngineSourceToJSONTyped,
} from './WorkstreamPatternEngineSource';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { WorkstreamPatternEngineSourceSupportedAccessibility } from './WorkstreamPatternEngineSourceSupportedAccessibility';
import {
    WorkstreamPatternEngineSourceSupportedAccessibilityFromJSON,
    WorkstreamPatternEngineSourceSupportedAccessibilityFromJSONTyped,
    WorkstreamPatternEngineSourceSupportedAccessibilityToJSON,
    WorkstreamPatternEngineSourceSupportedAccessibilityToJSONTyped,
} from './WorkstreamPatternEngineSourceSupportedAccessibility';

/**
 * TODO
 * @export
 * @interface SeededWorkstreamPatternEngineSource
 */
export interface SeededWorkstreamPatternEngineSource {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededWorkstreamPatternEngineSource
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {WorkstreamPatternEngineSource}
     * @memberof SeededWorkstreamPatternEngineSource
     */
    raw: WorkstreamPatternEngineSource;
    /**
     * This will determine if we want to filter this specific source
     * @type {boolean}
     * @memberof SeededWorkstreamPatternEngineSource
     */
    filter?: boolean;
    /**
     * This is the name of the source(defualt original data) this is NOT used for matching just for readability
     * @type {string}
     * @memberof SeededWorkstreamPatternEngineSource
     */
    readable: string;
    /**
     * 
     * @type {WorkstreamPatternEngineSourceSupportedAccessibility}
     * @memberof SeededWorkstreamPatternEngineSource
     */
    accessibility?: WorkstreamPatternEngineSourceSupportedAccessibility;
}

/**
 * Check if a given object implements the SeededWorkstreamPatternEngineSource interface.
 */
export function instanceOfSeededWorkstreamPatternEngineSource(value: object): value is SeededWorkstreamPatternEngineSource {
    if (!('raw' in value) || value['raw'] === undefined) return false;
    if (!('readable' in value) || value['readable'] === undefined) return false;
    return true;
}

export function SeededWorkstreamPatternEngineSourceFromJSON(json: any): SeededWorkstreamPatternEngineSource {
    return SeededWorkstreamPatternEngineSourceFromJSONTyped(json, false);
}

export function SeededWorkstreamPatternEngineSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededWorkstreamPatternEngineSource {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'raw': WorkstreamPatternEngineSourceFromJSON(json['raw']),
        'filter': json['filter'] == null ? undefined : json['filter'],
        'readable': json['readable'],
        'accessibility': json['accessibility'] == null ? undefined : WorkstreamPatternEngineSourceSupportedAccessibilityFromJSON(json['accessibility']),
    };
}

export function SeededWorkstreamPatternEngineSourceToJSON(json: any): SeededWorkstreamPatternEngineSource {
    return SeededWorkstreamPatternEngineSourceToJSONTyped(json, false);
}

export function SeededWorkstreamPatternEngineSourceToJSONTyped(value?: SeededWorkstreamPatternEngineSource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'raw': WorkstreamPatternEngineSourceToJSON(value['raw']),
        'filter': value['filter'],
        'readable': value['readable'],
        'accessibility': WorkstreamPatternEngineSourceSupportedAccessibilityToJSON(value['accessibility']),
    };
}

