/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LanguageServerProtocolLocation } from './LanguageServerProtocolLocation';
import {
    LanguageServerProtocolLocationFromJSON,
    LanguageServerProtocolLocationFromJSONTyped,
    LanguageServerProtocolLocationToJSON,
    LanguageServerProtocolLocationToJSONTyped,
} from './LanguageServerProtocolLocation';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { Classification } from './Classification';
import {
    ClassificationFromJSON,
    ClassificationFromJSONTyped,
    ClassificationToJSON,
    ClassificationToJSONTyped,
} from './Classification';
import type { TransferableString } from './TransferableString';
import {
    TransferableStringFromJSON,
    TransferableStringFromJSONTyped,
    TransferableStringToJSON,
    TransferableStringToJSONTyped,
} from './TransferableString';

/**
 * This is a given bit of text/code that is selected in the IDE, this can be a copy/paste/selection
 * 
 * location: this is the given location provided by the LSP(might need to be a different object we will see)
 * @export
 * @interface IDESelection
 */
export interface IDESelection {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof IDESelection
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {LanguageServerProtocolLocation}
     * @memberof IDESelection
     */
    location?: LanguageServerProtocolLocation;
    /**
     * 
     * @type {Classification}
     * @memberof IDESelection
     */
    classification?: Classification;
    /**
     * 
     * @type {TransferableString}
     * @memberof IDESelection
     */
    value?: TransferableString;
}

/**
 * Check if a given object implements the IDESelection interface.
 */
export function instanceOfIDESelection(value: object): value is IDESelection {
    return true;
}

export function IDESelectionFromJSON(json: any): IDESelection {
    return IDESelectionFromJSONTyped(json, false);
}

export function IDESelectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): IDESelection {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'location': json['location'] == null ? undefined : LanguageServerProtocolLocationFromJSON(json['location']),
        'classification': json['classification'] == null ? undefined : ClassificationFromJSON(json['classification']),
        'value': json['value'] == null ? undefined : TransferableStringFromJSON(json['value']),
    };
}

export function IDESelectionToJSON(json: any): IDESelection {
    return IDESelectionToJSONTyped(json, false);
}

export function IDESelectionToJSONTyped(value?: IDESelection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'location': LanguageServerProtocolLocationToJSON(value['location']),
        'classification': ClassificationToJSON(value['classification']),
        'value': TransferableStringToJSON(value['value']),
    };
}

