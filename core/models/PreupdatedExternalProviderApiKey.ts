/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Auth0OpenAIUserMetadata } from './Auth0OpenAIUserMetadata';
import {
    Auth0OpenAIUserMetadataFromJSON,
    Auth0OpenAIUserMetadataFromJSONTyped,
    Auth0OpenAIUserMetadataToJSON,
    Auth0OpenAIUserMetadataToJSONTyped,
} from './Auth0OpenAIUserMetadata';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This is the endput model for "/external_provider/api_key/update". everything but the uder will be optional, anything that is defined will get an update.
 * @export
 * @interface PreupdatedExternalProviderApiKey
 */
export interface PreupdatedExternalProviderApiKey {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof PreupdatedExternalProviderApiKey
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof PreupdatedExternalProviderApiKey
     */
    user: string;
    /**
     * 
     * @type {Auth0OpenAIUserMetadata}
     * @memberof PreupdatedExternalProviderApiKey
     */
    openAI?: Auth0OpenAIUserMetadata;
}

/**
 * Check if a given object implements the PreupdatedExternalProviderApiKey interface.
 */
export function instanceOfPreupdatedExternalProviderApiKey(value: object): value is PreupdatedExternalProviderApiKey {
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function PreupdatedExternalProviderApiKeyFromJSON(json: any): PreupdatedExternalProviderApiKey {
    return PreupdatedExternalProviderApiKeyFromJSONTyped(json, false);
}

export function PreupdatedExternalProviderApiKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PreupdatedExternalProviderApiKey {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'user': json['user'],
        'openAI': json['open_AI'] == null ? undefined : Auth0OpenAIUserMetadataFromJSON(json['open_AI']),
    };
}

export function PreupdatedExternalProviderApiKeyToJSON(json: any): PreupdatedExternalProviderApiKey {
    return PreupdatedExternalProviderApiKeyToJSONTyped(json, false);
}

export function PreupdatedExternalProviderApiKeyToJSONTyped(value?: PreupdatedExternalProviderApiKey | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'user': value['user'],
        'open_AI': Auth0OpenAIUserMetadataToJSON(value['openAI']),
    };
}

