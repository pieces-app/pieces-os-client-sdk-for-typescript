/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * OPEN: Means that privacy is fully open
 * CLOSED: Means that privacy is fully locked down, and private
 * ANONYMOUS: Means that we are allowed to collect information but it cannot get attached to me as the user.
 * @export
 */
export const PrivacyEnum = {
    Unknown: 'UNKNOWN',
    Open: 'OPEN',
    Closed: 'CLOSED',
    Anonymous: 'ANONYMOUS'
} as const;
export type PrivacyEnum = typeof PrivacyEnum[keyof typeof PrivacyEnum];


export function instanceOfPrivacyEnum(value: any): boolean {
    for (const key in PrivacyEnum) {
        if (Object.prototype.hasOwnProperty.call(PrivacyEnum, key)) {
            if (PrivacyEnum[key as keyof typeof PrivacyEnum] === value) {
                return true;
            }
        }
    }
    return false;
}

export function PrivacyEnumFromJSON(json: any): PrivacyEnum {
    return PrivacyEnumFromJSONTyped(json, false);
}

export function PrivacyEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivacyEnum {
    if (json === null || json === undefined) {
        // Return x-enum-default
        return 'UNKNOWN' as PrivacyEnum;
    }

    if (instanceOfPrivacyEnum(json)) {
        return json as PrivacyEnum;
    }
    else {
        // Return x-enum-default
        return 'UNKNOWN' as PrivacyEnum;
    }
}

export function PrivacyEnumToJSON(value?: PrivacyEnum | null): any {
    if (value === null || value === undefined) {
        // Return x-enum-default
        return 'UNKNOWN' as PrivacyEnum;
    }

    // This must be checked when arguments are passed as 'any'
    if (instanceOfPrivacyEnum(value)) {
        return value as PrivacyEnum;
    }
    else {
        // Return x-enum-default
        return 'UNKNOWN' as PrivacyEnum;
    }
}

export function PrivacyEnumToJSONTyped(value: any, ignoreDiscriminator: boolean): PrivacyEnum {
    if (value === null || value === undefined) {
        // Return x-enum-default
        return 'UNKNOWN' as PrivacyEnum;
    }
    if (instanceOfPrivacyEnum(value)) {
        return value as PrivacyEnum;
    }
    else {
        // Return x-enum-default
        return 'UNKNOWN' as PrivacyEnum;
    }
}
