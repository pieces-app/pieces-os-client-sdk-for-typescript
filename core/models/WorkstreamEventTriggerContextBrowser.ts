/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BrowserTabs } from './BrowserTabs';
import {
    BrowserTabsFromJSON,
    BrowserTabsFromJSONTyped,
    BrowserTabsToJSON,
    BrowserTabsToJSONTyped,
} from './BrowserTabs';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * This is the given context for the browser,
 * 
 * a client can pass through many of the same tab if they would like,
 * 
 * note: however please try to only side 3 unique website/anchors
 * @export
 * @interface WorkstreamEventTriggerContextBrowser
 */
export interface WorkstreamEventTriggerContextBrowser {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof WorkstreamEventTriggerContextBrowser
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {BrowserTabs}
     * @memberof WorkstreamEventTriggerContextBrowser
     */
    tabs?: BrowserTabs;
}

/**
 * Check if a given object implements the WorkstreamEventTriggerContextBrowser interface.
 */
export function instanceOfWorkstreamEventTriggerContextBrowser(value: object): value is WorkstreamEventTriggerContextBrowser {
    return true;
}

export function WorkstreamEventTriggerContextBrowserFromJSON(json: any): WorkstreamEventTriggerContextBrowser {
    return WorkstreamEventTriggerContextBrowserFromJSONTyped(json, false);
}

export function WorkstreamEventTriggerContextBrowserFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkstreamEventTriggerContextBrowser {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'tabs': json['tabs'] == null ? undefined : BrowserTabsFromJSON(json['tabs']),
    };
}

export function WorkstreamEventTriggerContextBrowserToJSON(json: any): WorkstreamEventTriggerContextBrowser {
    return WorkstreamEventTriggerContextBrowserToJSONTyped(json, false);
}

export function WorkstreamEventTriggerContextBrowserToJSONTyped(value?: WorkstreamEventTriggerContextBrowser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'tabs': BrowserTabsToJSON(value['tabs']),
    };
}

