/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A Model to support account creation to Auth0's Database.
 * @export
 * @interface OAuthAccount
 */
export interface OAuthAccount {
    /**
     * The client_id of your client.
     * @type {string}
     * @memberof OAuthAccount
     */
    clientId: string;
    /**
     * The user's email address.
     * @type {string}
     * @memberof OAuthAccount
     */
    email: string;
    /**
     * The name of the database configured to your client.
     * @type {string}
     * @memberof OAuthAccount
     */
    connection: string;
    /**
     * The user's username. Only valid if the connection requires a username.
     * @type {string}
     * @memberof OAuthAccount
     */
    username: string;
    /**
     * The user's given name(s).
     * @type {string}
     * @memberof OAuthAccount
     */
    givenName: string;
    /**
     * The user's family name(s).
     * @type {string}
     * @memberof OAuthAccount
     */
    familyName: string;
    /**
     * The user's full name.
     * @type {string}
     * @memberof OAuthAccount
     */
    name: string;
    /**
     * A URI pointing to the user's picture.
     * @type {string}
     * @memberof OAuthAccount
     */
    picture: string;
    /**
     * The user's nickname.
     * @type {string}
     * @memberof OAuthAccount
     */
    nickname: string;
}


/**
 * Check if a given object implements the OAuthAccount interface.
 */
export function instanceOfOAuthAccount(value: object): value is OAuthAccount {
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('connection' in value) || value['connection'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('givenName' in value) || value['givenName'] === undefined) return false;
    if (!('familyName' in value) || value['familyName'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('picture' in value) || value['picture'] === undefined) return false;
    if (!('nickname' in value) || value['nickname'] === undefined) return false;
    return true;
}

export function OAuthAccountFromJSON(json: any): OAuthAccount {
    return OAuthAccountFromJSONTyped(json, false);
}

export function OAuthAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'clientId': json['client_id'],
        'email': json['email'],
        'connection': json['connection'],
        'username': json['username'],
        'givenName': json['given_name'],
        'familyName': json['family_name'],
        'name': json['name'],
        'picture': json['picture'],
        'nickname': json['nickname'],
    };
}

export function OAuthAccountToJSON(json: any): OAuthAccount {
    return OAuthAccountToJSONTyped(json, false);
}

export function OAuthAccountToJSONTyped(value?: OAuthAccount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'client_id': value['clientId'],
        'email': value['email'],
        'connection': value['connection'],
        'username': value['username'],
        'given_name': value['givenName'],
        'family_name': value['familyName'],
        'name': value['name'],
        'picture': value['picture'],
        'nickname': value['nickname'],
    };
}

