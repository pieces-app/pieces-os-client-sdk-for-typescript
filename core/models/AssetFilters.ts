/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FilterOperationTypeEnum } from './FilterOperationTypeEnum';
import {
    FilterOperationTypeEnumFromJSON,
    FilterOperationTypeEnumFromJSONTyped,
    FilterOperationTypeEnumToJSON,
    FilterOperationTypeEnumToJSONTyped,
} from './FilterOperationTypeEnum';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { AssetFilter } from './AssetFilter';
import {
    AssetFilterFromJSON,
    AssetFilterFromJSONTyped,
    AssetFilterToJSON,
    AssetFilterToJSONTyped,
} from './AssetFilter';

/**
 * 
 * @export
 * @interface AssetFilters
 */
export interface AssetFilters {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof AssetFilters
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Array<AssetFilter>}
     * @memberof AssetFilters
     */
    iterable: Array<AssetFilter>;
    /**
     * 
     * @type {FilterOperationTypeEnum}
     * @memberof AssetFilters
     */
    type?: FilterOperationTypeEnum;
}



/**
 * Check if a given object implements the AssetFilters interface.
 */
export function instanceOfAssetFilters(value: object): value is AssetFilters {
    if (!('iterable' in value) || value['iterable'] === undefined) return false;
    return true;
}

export function AssetFiltersFromJSON(json: any): AssetFilters {
    return AssetFiltersFromJSONTyped(json, false);
}

export function AssetFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetFilters {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'iterable': ((json['iterable'] as Array<any>).map(AssetFilterFromJSON)),
        'type': json['type'] == null ? undefined : FilterOperationTypeEnumFromJSON(json['type']),
    };
}

export function AssetFiltersToJSON(json: any): AssetFilters {
    return AssetFiltersToJSONTyped(json, false);
}

export function AssetFiltersToJSONTyped(value?: AssetFilters | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'iterable': ((value['iterable'] as Array<any>).map(AssetFilterToJSON)),
        'type': FilterOperationTypeEnumToJSON(value['type']),
    };
}

