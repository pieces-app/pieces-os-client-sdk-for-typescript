/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FragmentMetadata } from './FragmentMetadata';
import {
    FragmentMetadataFromJSON,
    FragmentMetadataFromJSONTyped,
    FragmentMetadataToJSON,
    FragmentMetadataToJSONTyped,
} from './FragmentMetadata';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { TransferableBytes } from './TransferableBytes';
import {
    TransferableBytesFromJSON,
    TransferableBytesFromJSONTyped,
    TransferableBytesToJSON,
    TransferableBytesToJSONTyped,
} from './TransferableBytes';
import type { TransferableString } from './TransferableString';
import {
    TransferableStringFromJSON,
    TransferableStringFromJSONTyped,
    TransferableStringToJSON,
    TransferableStringToJSONTyped,
} from './TransferableString';

/**
 * This will be either a TransferableString or TransferableBytes that represent your fragment. ONLY Pass one or the other DONT pass both or neither.
 * @export
 * @interface SeededFragment
 */
export interface SeededFragment {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededFragment
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {TransferableString}
     * @memberof SeededFragment
     */
    string?: TransferableString;
    /**
     * 
     * @type {TransferableBytes}
     * @memberof SeededFragment
     */
    bytes?: TransferableBytes;
    /**
     * 
     * @type {FragmentMetadata}
     * @memberof SeededFragment
     */
    metadata?: FragmentMetadata;
}


/**
 * Check if a given object implements the SeededFragment interface.
 */
export function instanceOfSeededFragment(value: object): value is SeededFragment {
    return true;
}

export function SeededFragmentFromJSON(json: any): SeededFragment {
    return SeededFragmentFromJSONTyped(json, false);
}

export function SeededFragmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededFragment {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'string': json['string'] == null ? undefined : TransferableStringFromJSON(json['string']),
        'bytes': json['bytes'] == null ? undefined : TransferableBytesFromJSON(json['bytes']),
        'metadata': json['metadata'] == null ? undefined : FragmentMetadataFromJSON(json['metadata']),
    };
}

export function SeededFragmentToJSON(json: any): SeededFragment {
    return SeededFragmentToJSONTyped(json, false);
}

export function SeededFragmentToJSONTyped(value?: SeededFragment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'string': TransferableStringToJSON(value['string']),
        'bytes': TransferableBytesToJSON(value['bytes']),
        'metadata': FragmentMetadataToJSON(value['metadata']),
    };
}

