/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { TextMatch } from './TextMatch';
import {
    TextMatchFromJSON,
    TextMatchFromJSONTyped,
    TextMatchToJSON,
    TextMatchToJSONTyped,
} from './TextMatch';

/**
 * This is optional metatdata attached to a sensitive piece of data.
 * @export
 * @interface SensitiveMetadata
 */
export interface SensitiveMetadata {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SensitiveMetadata
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {TextMatch}
     * @memberof SensitiveMetadata
     */
    match?: TextMatch;
    /**
     * entropy of the sensitive
     * @type {number}
     * @memberof SensitiveMetadata
     */
    entropy?: number;
}


/**
 * Check if a given object implements the SensitiveMetadata interface.
 */
export function instanceOfSensitiveMetadata(value: object): value is SensitiveMetadata {
    return true;
}

export function SensitiveMetadataFromJSON(json: any): SensitiveMetadata {
    return SensitiveMetadataFromJSONTyped(json, false);
}

export function SensitiveMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SensitiveMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'match': json['match'] == null ? undefined : TextMatchFromJSON(json['match']),
        'entropy': json['entropy'] == null ? undefined : json['entropy'],
    };
}

export function SensitiveMetadataToJSON(json: any): SensitiveMetadata {
    return SensitiveMetadataToJSONTyped(json, false);
}

export function SensitiveMetadataToJSONTyped(value?: SensitiveMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'match': TextMatchToJSON(value['match']),
        'entropy': value['entropy'],
    };
}

