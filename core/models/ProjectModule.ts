/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SeededAnchor } from './SeededAnchor';
import {
    SeededAnchorFromJSON,
    SeededAnchorFromJSONTyped,
    SeededAnchorToJSON,
    SeededAnchorToJSONTyped,
} from './SeededAnchor';
import type { Classifications } from './Classifications';
import {
    ClassificationsFromJSON,
    ClassificationsFromJSONTyped,
    ClassificationsToJSON,
    ClassificationsToJSONTyped,
} from './Classifications';
import type { DocumentContributors } from './DocumentContributors';
import {
    DocumentContributorsFromJSON,
    DocumentContributorsFromJSONTyped,
    DocumentContributorsToJSON,
    DocumentContributorsToJSONTyped,
} from './DocumentContributors';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { AnonymousTemporalRange } from './AnonymousTemporalRange';
import {
    AnonymousTemporalRangeFromJSON,
    AnonymousTemporalRangeFromJSONTyped,
    AnonymousTemporalRangeToJSON,
    AnonymousTemporalRangeToJSONTyped,
} from './AnonymousTemporalRange';

/**
 * This is a representation of a Module or a Project
 * 
 * anchor: is the folder path of this repo/module
 * 
 * contributors: is a nice to have is all the contributors of this repo/module
 * 
 * range: is the amount of time this user has been working on this repo
 * 
 * classifications: if all the languages that are used within this repo/module
 * @export
 * @interface ProjectModule
 */
export interface ProjectModule {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof ProjectModule
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {SeededAnchor}
     * @memberof ProjectModule
     */
    anchor: SeededAnchor;
    /**
     * 
     * @type {AnonymousTemporalRange}
     * @memberof ProjectModule
     */
    range?: AnonymousTemporalRange;
    /**
     * 
     * @type {DocumentContributors}
     * @memberof ProjectModule
     */
    contributors?: DocumentContributors;
    /**
     * 
     * @type {Classifications}
     * @memberof ProjectModule
     */
    classifications?: Classifications;
}


/**
 * Check if a given object implements the ProjectModule interface.
 */
export function instanceOfProjectModule(value: object): value is ProjectModule {
    if (!('anchor' in value) || value['anchor'] === undefined) return false;
    return true;
}

export function ProjectModuleFromJSON(json: any): ProjectModule {
    return ProjectModuleFromJSONTyped(json, false);
}

export function ProjectModuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectModule {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'anchor': SeededAnchorFromJSON(json['anchor']),
        'range': json['range'] == null ? undefined : AnonymousTemporalRangeFromJSON(json['range']),
        'contributors': json['contributors'] == null ? undefined : DocumentContributorsFromJSON(json['contributors']),
        'classifications': json['classifications'] == null ? undefined : ClassificationsFromJSON(json['classifications']),
    };
}

export function ProjectModuleToJSON(json: any): ProjectModule {
    return ProjectModuleToJSONTyped(json, false);
}

export function ProjectModuleToJSONTyped(value?: ProjectModule | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'anchor': SeededAnchorToJSON(value['anchor']),
        'range': AnonymousTemporalRangeToJSON(value['range']),
        'contributors': DocumentContributorsToJSON(value['contributors']),
        'classifications': ClassificationsToJSON(value['classifications']),
    };
}

