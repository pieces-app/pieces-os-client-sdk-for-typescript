/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { FlattenedImageAnalysis } from './FlattenedImageAnalysis';
import {
    FlattenedImageAnalysisFromJSON,
    FlattenedImageAnalysisFromJSONTyped,
    FlattenedImageAnalysisToJSON,
    FlattenedImageAnalysisToJSONTyped,
} from './FlattenedImageAnalysis';
import type { CodeAnalysis } from './CodeAnalysis';
import {
    CodeAnalysisFromJSON,
    CodeAnalysisFromJSONTyped,
    CodeAnalysisToJSON,
    CodeAnalysisToJSONTyped,
} from './CodeAnalysis';

/**
 * 
 * @export
 * @interface FlattenedAnalysis
 */
export interface FlattenedAnalysis {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof FlattenedAnalysis
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {CodeAnalysis}
     * @memberof FlattenedAnalysis
     */
    code?: CodeAnalysis;
    /**
     * 
     * @type {string}
     * @memberof FlattenedAnalysis
     */
    id: string;
    /**
     * this is a reference to the format that it belongs too.
     * @type {string}
     * @memberof FlattenedAnalysis
     */
    format: string;
    /**
     * 
     * @type {FlattenedImageAnalysis}
     * @memberof FlattenedAnalysis
     */
    image?: FlattenedImageAnalysis;
}

/**
 * Check if a given object implements the FlattenedAnalysis interface.
 */
export function instanceOfFlattenedAnalysis(value: object): value is FlattenedAnalysis {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('format' in value) || value['format'] === undefined) return false;
    return true;
}

export function FlattenedAnalysisFromJSON(json: any): FlattenedAnalysis {
    return FlattenedAnalysisFromJSONTyped(json, false);
}

export function FlattenedAnalysisFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlattenedAnalysis {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'code': json['code'] == null ? undefined : CodeAnalysisFromJSON(json['code']),
        'id': json['id'],
        'format': json['format'],
        'image': json['image'] == null ? undefined : FlattenedImageAnalysisFromJSON(json['image']),
    };
}

export function FlattenedAnalysisToJSON(json: any): FlattenedAnalysis {
    return FlattenedAnalysisToJSONTyped(json, false);
}

export function FlattenedAnalysisToJSONTyped(value?: FlattenedAnalysis | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'code': CodeAnalysisToJSON(value['code']),
        'id': value['id'],
        'format': value['format'],
        'image': FlattenedImageAnalysisToJSON(value['image']),
    };
}

