/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AppletServingHandlerType } from './AppletServingHandlerType';
import {
    AppletServingHandlerTypeFromJSON,
    AppletServingHandlerTypeFromJSONTyped,
    AppletServingHandlerTypeToJSON,
    AppletServingHandlerTypeToJSONTyped,
} from './AppletServingHandlerType';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { Application } from './Application';
import {
    ApplicationFromJSON,
    ApplicationFromJSONTyped,
    ApplicationToJSON,
    ApplicationToJSONTyped,
} from './Application';
import type { OSAppletEnum } from './OSAppletEnum';
import {
    OSAppletEnumFromJSON,
    OSAppletEnumFromJSONTyped,
    OSAppletEnumToJSON,
    OSAppletEnumToJSONTyped,
} from './OSAppletEnum';

/**
 * TODO
 * @export
 * @interface TerminatingOSServerApplet
 */
export interface TerminatingOSServerApplet {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TerminatingOSServerApplet
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Application}
     * @memberof TerminatingOSServerApplet
     */
    parent?: Application;
    /**
     * Validation check if the port is passed in.
     * @type {number}
     * @memberof TerminatingOSServerApplet
     */
    port?: number;
    /**
     * 
     * @type {OSAppletEnum}
     * @memberof TerminatingOSServerApplet
     */
    type: OSAppletEnum;
    /**
     * 
     * @type {AppletServingHandlerType}
     * @memberof TerminatingOSServerApplet
     */
    handler?: AppletServingHandlerType;
}


/**
 * Check if a given object implements the TerminatingOSServerApplet interface.
 */
export function instanceOfTerminatingOSServerApplet(value: object): value is TerminatingOSServerApplet {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function TerminatingOSServerAppletFromJSON(json: any): TerminatingOSServerApplet {
    return TerminatingOSServerAppletFromJSONTyped(json, false);
}

export function TerminatingOSServerAppletFromJSONTyped(json: any, ignoreDiscriminator: boolean): TerminatingOSServerApplet {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'parent': json['parent'] == null ? undefined : ApplicationFromJSON(json['parent']),
        'port': json['port'] == null ? undefined : json['port'],
        'type': OSAppletEnumFromJSON(json['type']),
        'handler': json['handler'] == null ? undefined : AppletServingHandlerTypeFromJSON(json['handler']),
    };
}

export function TerminatingOSServerAppletToJSON(json: any): TerminatingOSServerApplet {
    return TerminatingOSServerAppletToJSONTyped(json, false);
}

export function TerminatingOSServerAppletToJSONTyped(value?: TerminatingOSServerApplet | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'parent': ApplicationToJSON(value['parent']),
        'port': value['port'],
        'type': OSAppletEnumToJSON(value['type']),
        'handler': AppletServingHandlerTypeToJSON(value['handler']),
    };
}

