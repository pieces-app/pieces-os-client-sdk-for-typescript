/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SeededDistributions } from './SeededDistributions';
import {
    SeededDistributionsFromJSON,
    SeededDistributionsFromJSONTyped,
    SeededDistributionsToJSON,
    SeededDistributionsToJSONTyped,
} from './SeededDistributions';
import type { SeededUser } from './SeededUser';
import {
    SeededUserFromJSON,
    SeededUserFromJSONTyped,
    SeededUserToJSON,
    SeededUserToJSONTyped,
} from './SeededUser';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { Seed } from './Seed';
import {
    SeedFromJSON,
    SeedFromJSONTyped,
    SeedToJSON,
    SeedToJSONTyped,
} from './Seed';
import type { Asset } from './Asset';
import {
    AssetFromJSON,
    AssetFromJSONTyped,
    AssetToJSON,
    AssetToJSONTyped,
} from './Asset';
import type { AccessEnum } from './AccessEnum';
import {
    AccessEnumFromJSON,
    AccessEnumFromJSONTyped,
    AccessEnumToJSON,
    AccessEnumToJSONTyped,
} from './AccessEnum';

/**
 * This is the incoming linkify model.
 * 
 * if access is PRIVATE then please provide and array of users to enable the link for.
 * 
 * @export
 * @interface Linkify
 */
export interface Linkify {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof Linkify
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Seed}
     * @memberof Linkify
     */
    seed?: Seed;
    /**
     * 
     * @type {Asset}
     * @memberof Linkify
     */
    asset?: Asset;
    /**
     * this is an array of users.
     * @type {Array<SeededUser>}
     * @memberof Linkify
     */
    users?: Array<SeededUser>;
    /**
     * 
     * @type {AccessEnum}
     * @memberof Linkify
     */
    access: AccessEnum;
    /**
     * 
     * @type {SeededDistributions}
     * @memberof Linkify
     */
    distributions?: SeededDistributions;
}



/**
 * Check if a given object implements the Linkify interface.
 */
export function instanceOfLinkify(value: object): value is Linkify {
    if (!('access' in value) || value['access'] === undefined) return false;
    return true;
}

export function LinkifyFromJSON(json: any): Linkify {
    return LinkifyFromJSONTyped(json, false);
}

export function LinkifyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Linkify {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'seed': json['seed'] == null ? undefined : SeedFromJSON(json['seed']),
        'asset': json['asset'] == null ? undefined : AssetFromJSON(json['asset']),
        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(SeededUserFromJSON)),
        'access': AccessEnumFromJSON(json['access']),
        'distributions': json['distributions'] == null ? undefined : SeededDistributionsFromJSON(json['distributions']),
    };
}

export function LinkifyToJSON(json: any): Linkify {
    return LinkifyToJSONTyped(json, false);
}

export function LinkifyToJSONTyped(value?: Linkify | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'seed': SeedToJSON(value['seed']),
        'asset': AssetToJSON(value['asset']),
        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(SeededUserToJSON)),
        'access': AccessEnumToJSON(value['access']),
        'distributions': SeededDistributionsToJSON(value['distributions']),
    };
}

