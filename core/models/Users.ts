/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserProfile } from './UserProfile';
import {
    UserProfileFromJSON,
    UserProfileFromJSONTyped,
    UserProfileToJSON,
    UserProfileToJSONTyped,
} from './UserProfile';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * A base class for a collection of users and some additional meta properties.
 * @export
 * @interface Users
 */
export interface Users {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof Users
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Array<UserProfile>}
     * @memberof Users
     */
    iterable?: Array<UserProfile>;
}

/**
 * Check if a given object implements the Users interface.
 */
export function instanceOfUsers(value: object): value is Users {
    return true;
}

export function UsersFromJSON(json: any): Users {
    return UsersFromJSONTyped(json, false);
}

export function UsersFromJSONTyped(json: any, ignoreDiscriminator: boolean): Users {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'iterable': json['iterable'] == null ? undefined : ((json['iterable'] as Array<any>).map(UserProfileFromJSON)),
    };
}

export function UsersToJSON(json: any): Users {
    return UsersToJSONTyped(json, false);
}

export function UsersToJSONTyped(value?: Users | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'iterable': value['iterable'] == null ? undefined : ((value['iterable'] as Array<any>).map(UserProfileToJSON)),
    };
}

