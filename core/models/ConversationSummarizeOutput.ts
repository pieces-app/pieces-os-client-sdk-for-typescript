/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferencedConversation } from './ReferencedConversation';
import {
    ReferencedConversationFromJSON,
    ReferencedConversationFromJSONTyped,
    ReferencedConversationToJSON,
    ReferencedConversationToJSONTyped,
} from './ReferencedConversation';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { ReferencedAnnotation } from './ReferencedAnnotation';
import {
    ReferencedAnnotationFromJSON,
    ReferencedAnnotationFromJSONTyped,
    ReferencedAnnotationToJSON,
    ReferencedAnnotationToJSONTyped,
} from './ReferencedAnnotation';

/**
 * This is the output model for "/conversation/{conversation}/summarize
 * @export
 * @interface ConversationSummarizeOutput
 */
export interface ConversationSummarizeOutput {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof ConversationSummarizeOutput
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {ReferencedConversation}
     * @memberof ConversationSummarizeOutput
     */
    conversation: ReferencedConversation;
    /**
     * 
     * @type {ReferencedAnnotation}
     * @memberof ConversationSummarizeOutput
     */
    annotation: ReferencedAnnotation;
}


/**
 * Check if a given object implements the ConversationSummarizeOutput interface.
 */
export function instanceOfConversationSummarizeOutput(value: object): value is ConversationSummarizeOutput {
    if (!('conversation' in value) || value['conversation'] === undefined) return false;
    if (!('annotation' in value) || value['annotation'] === undefined) return false;
    return true;
}

export function ConversationSummarizeOutputFromJSON(json: any): ConversationSummarizeOutput {
    return ConversationSummarizeOutputFromJSONTyped(json, false);
}

export function ConversationSummarizeOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationSummarizeOutput {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'conversation': ReferencedConversationFromJSON(json['conversation']),
        'annotation': ReferencedAnnotationFromJSON(json['annotation']),
    };
}

export function ConversationSummarizeOutputToJSON(json: any): ConversationSummarizeOutput {
    return ConversationSummarizeOutputToJSONTyped(json, false);
}

export function ConversationSummarizeOutputToJSONTyped(value?: ConversationSummarizeOutput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'conversation': ReferencedConversationToJSON(value['conversation']),
        'annotation': ReferencedAnnotationToJSON(value['annotation']),
    };
}

