/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QGPTTaskPipelineForCodeFix } from './QGPTTaskPipelineForCodeFix';
import {
    QGPTTaskPipelineForCodeFixFromJSON,
    QGPTTaskPipelineForCodeFixFromJSONTyped,
    QGPTTaskPipelineForCodeFixToJSON,
    QGPTTaskPipelineForCodeFixToJSONTyped,
} from './QGPTTaskPipelineForCodeFix';
import type { QGPTTaskPipelineForCodeCommentation } from './QGPTTaskPipelineForCodeCommentation';
import {
    QGPTTaskPipelineForCodeCommentationFromJSON,
    QGPTTaskPipelineForCodeCommentationFromJSONTyped,
    QGPTTaskPipelineForCodeCommentationToJSON,
    QGPTTaskPipelineForCodeCommentationToJSONTyped,
} from './QGPTTaskPipelineForCodeCommentation';
import type { QGPTTaskPipelineForCodeModification } from './QGPTTaskPipelineForCodeModification';
import {
    QGPTTaskPipelineForCodeModificationFromJSON,
    QGPTTaskPipelineForCodeModificationFromJSONTyped,
    QGPTTaskPipelineForCodeModificationToJSON,
    QGPTTaskPipelineForCodeModificationToJSONTyped,
} from './QGPTTaskPipelineForCodeModification';
import type { QGPTTaskPipelineForCodeCompletion } from './QGPTTaskPipelineForCodeCompletion';
import {
    QGPTTaskPipelineForCodeCompletionFromJSON,
    QGPTTaskPipelineForCodeCompletionFromJSONTyped,
    QGPTTaskPipelineForCodeCompletionToJSON,
    QGPTTaskPipelineForCodeCompletionToJSONTyped,
} from './QGPTTaskPipelineForCodeCompletion';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { QGPTTaskPipelineForCodeExplanation } from './QGPTTaskPipelineForCodeExplanation';
import {
    QGPTTaskPipelineForCodeExplanationFromJSON,
    QGPTTaskPipelineForCodeExplanationFromJSONTyped,
    QGPTTaskPipelineForCodeExplanationToJSON,
    QGPTTaskPipelineForCodeExplanationToJSONTyped,
} from './QGPTTaskPipelineForCodeExplanation';

/**
 * This model is specifically for QGPT Task pipelines, the model is used to group one off tasks for instance fix/explaining/commenting
 * that dont necessarily require a conversation form factor.
 * @export
 * @interface QGPTTaskPipeline
 */
export interface QGPTTaskPipeline {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof QGPTTaskPipeline
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {QGPTTaskPipelineForCodeExplanation}
     * @memberof QGPTTaskPipeline
     */
    codeExplanation?: QGPTTaskPipelineForCodeExplanation;
    /**
     * 
     * @type {QGPTTaskPipelineForCodeCommentation}
     * @memberof QGPTTaskPipeline
     */
    codeCommentation?: QGPTTaskPipelineForCodeCommentation;
    /**
     * 
     * @type {QGPTTaskPipelineForCodeFix}
     * @memberof QGPTTaskPipeline
     */
    codeFix?: QGPTTaskPipelineForCodeFix;
    /**
     * 
     * @type {QGPTTaskPipelineForCodeModification}
     * @memberof QGPTTaskPipeline
     */
    codeModification?: QGPTTaskPipelineForCodeModification;
    /**
     * 
     * @type {QGPTTaskPipelineForCodeCompletion}
     * @memberof QGPTTaskPipeline
     */
    codeCompletion?: QGPTTaskPipelineForCodeCompletion;
}

/**
 * Check if a given object implements the QGPTTaskPipeline interface.
 */
export function instanceOfQGPTTaskPipeline(value: object): value is QGPTTaskPipeline {
    return true;
}

export function QGPTTaskPipelineFromJSON(json: any): QGPTTaskPipeline {
    return QGPTTaskPipelineFromJSONTyped(json, false);
}

export function QGPTTaskPipelineFromJSONTyped(json: any, ignoreDiscriminator: boolean): QGPTTaskPipeline {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'codeExplanation': json['code_explanation'] == null ? undefined : QGPTTaskPipelineForCodeExplanationFromJSON(json['code_explanation']),
        'codeCommentation': json['code_commentation'] == null ? undefined : QGPTTaskPipelineForCodeCommentationFromJSON(json['code_commentation']),
        'codeFix': json['code_fix'] == null ? undefined : QGPTTaskPipelineForCodeFixFromJSON(json['code_fix']),
        'codeModification': json['code_modification'] == null ? undefined : QGPTTaskPipelineForCodeModificationFromJSON(json['code_modification']),
        'codeCompletion': json['code_completion'] == null ? undefined : QGPTTaskPipelineForCodeCompletionFromJSON(json['code_completion']),
    };
}

export function QGPTTaskPipelineToJSON(json: any): QGPTTaskPipeline {
    return QGPTTaskPipelineToJSONTyped(json, false);
}

export function QGPTTaskPipelineToJSONTyped(value?: QGPTTaskPipeline | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'code_explanation': QGPTTaskPipelineForCodeExplanationToJSON(value['codeExplanation']),
        'code_commentation': QGPTTaskPipelineForCodeCommentationToJSON(value['codeCommentation']),
        'code_fix': QGPTTaskPipelineForCodeFixToJSON(value['codeFix']),
        'code_modification': QGPTTaskPipelineForCodeModificationToJSON(value['codeModification']),
        'code_completion': QGPTTaskPipelineForCodeCompletionToJSON(value['codeCompletion']),
    };
}

