/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OAuthGroup } from './OAuthGroup';
import {
    OAuthGroupFromJSON,
    OAuthGroupFromJSONTyped,
    OAuthGroupToJSON,
    OAuthGroupToJSONTyped,
} from './OAuthGroup';
import type { DescopeUser } from './DescopeUser';
import {
    DescopeUserFromJSON,
    DescopeUserFromJSONTyped,
    DescopeUserToJSON,
    DescopeUserToJSONTyped,
} from './DescopeUser';
import type { Auth0Redirects } from './Auth0Redirects';
import {
    Auth0RedirectsFromJSON,
    Auth0RedirectsFromJSONTyped,
    Auth0RedirectsToJSON,
    Auth0RedirectsToJSONTyped,
} from './Auth0Redirects';

/**
 * An object representing all of the properties that are available within a Descope PKCE Flow
 * @export
 * @interface Descope
 */
export interface Descope {
    /**
     * 
     * @type {Auth0Redirects}
     * @memberof Descope
     */
    redirects: Auth0Redirects;
    /**
     * 
     * @type {OAuthGroup}
     * @memberof Descope
     */
    oAuth: OAuthGroup;
    /**
     * 
     * @type {DescopeUser}
     * @memberof Descope
     */
    user?: DescopeUser;
    /**
     * 
     * @type {string}
     * @memberof Descope
     */
    audience?: string;
}


/**
 * Check if a given object implements the Descope interface.
 */
export function instanceOfDescope(value: object): value is Descope {
    if (!('redirects' in value) || value['redirects'] === undefined) return false;
    if (!('oAuth' in value) || value['oAuth'] === undefined) return false;
    return true;
}

export function DescopeFromJSON(json: any): Descope {
    return DescopeFromJSONTyped(json, false);
}

export function DescopeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Descope {
    if (json == null) {
        return json;
    }
    return {
        
        'redirects': Auth0RedirectsFromJSON(json['redirects']),
        'oAuth': OAuthGroupFromJSON(json['oAuth']),
        'user': json['user'] == null ? undefined : DescopeUserFromJSON(json['user']),
        'audience': json['audience'] == null ? undefined : json['audience'],
    };
}

export function DescopeToJSON(json: any): Descope {
    return DescopeToJSONTyped(json, false);
}

export function DescopeToJSONTyped(value?: Descope | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'redirects': Auth0RedirectsToJSON(value['redirects']),
        'oAuth': OAuthGroupToJSON(value['oAuth']),
        'user': DescopeUserToJSON(value['user']),
        'audience': value['audience'],
    };
}

