/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';

/**
 * These are all of the available event types that are permitted in an object pair notation.
 * @export
 * @interface TrackedConversationMessageEventIdentifierDescriptionPairs
 */
export interface TrackedConversationMessageEventIdentifierDescriptionPairs {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TrackedConversationMessageEventIdentifierDescriptionPairs
     */
    schema?: EmbeddedModelSchema;
    /**
     * The key value pair for an message being created.
     * @type {string}
     * @memberof TrackedConversationMessageEventIdentifierDescriptionPairs
     */
    messageCreated?: TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum;
}
/**
 * @export
 */
export const TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum = {
    Unknown: 'UNKNOWN',
    AConversationMessageWasCreated: 'a_conversation_message_was_created'
} as const;
export type TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum = typeof TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum[keyof typeof TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum];

    export function instanceOfTrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum(value: any): boolean {
        for (const key in TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum) {
            if (Object.prototype.hasOwnProperty.call(TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum, key)) {
                if (TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum[key as keyof typeof TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum] === value) {
                    return true;
                }
            }
        }
        return false;
    }

    export function TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnumFromJSON(json: any): TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum {
        return TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnumFromJSONTyped(json, false);
    }

    export function TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum {
        if (json === null || json === undefined) {
            // Return x-enum-default
            return 'UNKNOWN' as TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum;
        }

        if (instanceOfTrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum(json)) {
            return json as TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum;
        }
        else {
            // Return x-enum-default
            return 'UNKNOWN' as TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum;
        }
    }

    export function TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnumToJSON(value?: TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum | null): any {
        if (value === null || value === undefined) {
            // Return x-enum-default
            return 'UNKNOWN' as TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum;
        }

        // This must be checked when arguments are passed as 'any'
            if (instanceOfTrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum(value)) {
            return value as TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum;
        }
        else {
            // Return x-enum-default
            return 'UNKNOWN' as TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum;
        }
    }

    export function TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnumToJSONTyped(value: any, ignoreDiscriminator: boolean): TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum {
        if (value === null || value === undefined) {
            // Return x-enum-default
            return 'UNKNOWN' as TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum;
        }
        if (instanceOfTrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum(value)) {
            return value as TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum;
        }
        else {
            // Return x-enum-default
            return 'UNKNOWN' as TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnum;
        }
    }



/**
 * Check if a given object implements the TrackedConversationMessageEventIdentifierDescriptionPairs interface.
 */
export function instanceOfTrackedConversationMessageEventIdentifierDescriptionPairs(value: object): value is TrackedConversationMessageEventIdentifierDescriptionPairs {
    return true;
}

export function TrackedConversationMessageEventIdentifierDescriptionPairsFromJSON(json: any): TrackedConversationMessageEventIdentifierDescriptionPairs {
    return TrackedConversationMessageEventIdentifierDescriptionPairsFromJSONTyped(json, false);
}

export function TrackedConversationMessageEventIdentifierDescriptionPairsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedConversationMessageEventIdentifierDescriptionPairs {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'messageCreated': TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnumFromJSON(json['message_created']),
    };
}

export function TrackedConversationMessageEventIdentifierDescriptionPairsToJSON(json: any): TrackedConversationMessageEventIdentifierDescriptionPairs {
    return TrackedConversationMessageEventIdentifierDescriptionPairsToJSONTyped(json, false);
}

export function TrackedConversationMessageEventIdentifierDescriptionPairsToJSONTyped(value?: TrackedConversationMessageEventIdentifierDescriptionPairs | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'messageCreated': TrackedConversationMessageEventIdentifierDescriptionPairsMessageCreatedEnumToJSON(value['message_created']),
    };
}

