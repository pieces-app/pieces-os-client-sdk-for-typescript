/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    EmbeddedModelSchemaToJSONTyped,
} from './EmbeddedModelSchema';
import type { OllamaDeployment } from './OllamaDeployment';
import {
    OllamaDeploymentFromJSON,
    OllamaDeploymentFromJSONTyped,
    OllamaDeploymentToJSON,
    OllamaDeploymentToJSONTyped,
} from './OllamaDeployment';
import type { OllamaRecommendation } from './OllamaRecommendation';
import {
    OllamaRecommendationFromJSON,
    OllamaRecommendationFromJSONTyped,
    OllamaRecommendationToJSON,
    OllamaRecommendationToJSONTyped,
} from './OllamaRecommendation';

/**
 * This will get used in the Websocket and in the get request for Ollama
 * Note:
 *  - updating (nullable) will be used in the case an update is underway
 *  - installing (nullable) will be used in the case an installation is underway
 *  - updateRequired (nullable) will be used in the case an update is required
 *  - installation (nullable) will be provided in the case Ollama is installed.
 * @export
 * @interface OllamaStatus
 */
export interface OllamaStatus {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof OllamaStatus
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {OllamaDeployment}
     * @memberof OllamaStatus
     */
    updating?: OllamaDeployment;
    /**
     * 
     * @type {OllamaDeployment}
     * @memberof OllamaStatus
     */
    installing?: OllamaDeployment;
    /**
     * 
     * @type {OllamaDeployment}
     * @memberof OllamaStatus
     */
    updateRequired?: OllamaDeployment;
    /**
     * 
     * @type {OllamaDeployment}
     * @memberof OllamaStatus
     */
    installation?: OllamaDeployment;
    /**
     * 
     * @type {OllamaRecommendation}
     * @memberof OllamaStatus
     */
    recommendation?: OllamaRecommendation;
}


/**
 * Check if a given object implements the OllamaStatus interface.
 */
export function instanceOfOllamaStatus(value: object): value is OllamaStatus {
    return true;
}

export function OllamaStatusFromJSON(json: any): OllamaStatus {
    return OllamaStatusFromJSONTyped(json, false);
}

export function OllamaStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): OllamaStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'updating': json['updating'] == null ? undefined : OllamaDeploymentFromJSON(json['updating']),
        'installing': json['installing'] == null ? undefined : OllamaDeploymentFromJSON(json['installing']),
        'updateRequired': json['updateRequired'] == null ? undefined : OllamaDeploymentFromJSON(json['updateRequired']),
        'installation': json['installation'] == null ? undefined : OllamaDeploymentFromJSON(json['installation']),
        'recommendation': json['recommendation'] == null ? undefined : OllamaRecommendationFromJSON(json['recommendation']),
    };
}

export function OllamaStatusToJSON(json: any): OllamaStatus {
    return OllamaStatusToJSONTyped(json, false);
}

export function OllamaStatusToJSONTyped(value?: OllamaStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'updating': OllamaDeploymentToJSON(value['updating']),
        'installing': OllamaDeploymentToJSON(value['installing']),
        'updateRequired': OllamaDeploymentToJSON(value['updateRequired']),
        'installation': OllamaDeploymentToJSON(value['installation']),
        'recommendation': OllamaRecommendationToJSON(value['recommendation']),
    };
}

