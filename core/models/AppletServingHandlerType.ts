/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A type representing a handler with optional folder/asset flags and a required key
 * @export
 * @interface AppletServingHandlerType
 */
export interface AppletServingHandlerType {
    /**
     * Indicates if the handler is for a folder (optional)
     * @type {boolean}
     * @memberof AppletServingHandlerType
     */
    isFolder?: boolean | null;
    /**
     * Indicates if the handler is for an asset (optional)
     * @type {boolean}
     * @memberof AppletServingHandlerType
     */
    isAsset?: boolean | null;
    /**
     * The version of the applet served by the handler
     * @type {string}
     * @memberof AppletServingHandlerType
     */
    version?: string | null;
    /**
     * A required unique identifier for the handler
     * @type {string}
     * @memberof AppletServingHandlerType
     */
    type: string;
}

/**
 * Check if a given object implements the AppletServingHandlerType interface.
 */
export function instanceOfAppletServingHandlerType(value: object): value is AppletServingHandlerType {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function AppletServingHandlerTypeFromJSON(json: any): AppletServingHandlerType {
    return AppletServingHandlerTypeFromJSONTyped(json, false);
}

export function AppletServingHandlerTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppletServingHandlerType {
    if (json == null) {
        return json;
    }
    return {
        
        'isFolder': json['isFolder'] == null ? undefined : json['isFolder'],
        'isAsset': json['isAsset'] == null ? undefined : json['isAsset'],
        'version': json['version'] == null ? undefined : json['version'],
        'type': json['type'],
    };
}

export function AppletServingHandlerTypeToJSON(json: any): AppletServingHandlerType {
    return AppletServingHandlerTypeToJSONTyped(json, false);
}

export function AppletServingHandlerTypeToJSONTyped(value?: AppletServingHandlerType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'isFolder': value['isFolder'],
        'isAsset': value['isAsset'],
        'version': value['version'],
        'type': value['type'],
    };
}

